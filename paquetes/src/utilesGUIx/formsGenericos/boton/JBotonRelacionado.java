/* * JBotonRelacionado.java * * Created on 7 de septiembre de 2004, 9:42 */package utilesGUIx.formsGenericos.boton;import utiles.JDepuracion;import utilesGUIx.ActionEventCZ;import utilesGUIx.JGUIxConfigGlobalModelo;import utilesGUIx.Rectangulo;/**Implementacion del boton por defecto que implementa IBotonRelacionado*/public class JBotonRelacionado implements IBotonRelacionado {    private String msNombre;    private String msCaption;    private IEjecutar moEjecutar;    private IEjecutarExtend moEjecutarExtend;    private Rectangulo moDimension;    private String msGrupo;    private boolean mbEsPrincipal = false;    private boolean mbActivo=true;    private boolean mbActivoSeguridad=true;    private Object moIcon;        public JBotonRelacionado(){    }    public JBotonRelacionado(String psNombre){        msNombre = psNombre;        msCaption = psNombre;    }    public JBotonRelacionado(String psNombre, boolean pbEsPrincipal){        this(psNombre);        mbEsPrincipal=pbEsPrincipal;    }    public JBotonRelacionado(String psNombre, IEjecutarExtend poEjecutar){        msNombre = psNombre;        msCaption = psNombre;        moEjecutarExtend=poEjecutar;    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param psImageCamino Camino de la imagen     * @param poEjecutar Objeto que ejecuta la accion     * @param psGrupo Grupo del Boton     */    public JBotonRelacionado(String psNombre, String psCaption, String psImageCamino, IEjecutar poEjecutar, String psGrupo) {        this(psNombre, psCaption, psImageCamino, poEjecutar,null, null, psGrupo);    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param psImageCamino Camino de la imagen     * @param poEjecutar Objeto que ejecuta la accion     */    public JBotonRelacionado(String psNombre, String psCaption, String psImageCamino, IEjecutar poEjecutar) {        this(psNombre, psCaption, psImageCamino, poEjecutar,null, null, "");    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param psImageCamino Camino de la imagen     * @param poEjecutar Objeto que ejecuta la accion     * @param psGrupo Grupo del Boton     */    public JBotonRelacionado(String psNombre, String psCaption, String psImageCamino, IEjecutarExtend poEjecutar, String psGrupo) {        this(psNombre, psCaption, psImageCamino,null, poEjecutar, null, psGrupo);    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param psImageCamino Camino de la imagen     * @param poEjecutar Objeto que ejecuta la accion     */    public JBotonRelacionado(String psNombre, String psCaption, String psImageCamino, IEjecutarExtend poEjecutar) {        this(psNombre, psCaption, psImageCamino,null, poEjecutar, null, "");    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param psImageCamino Camino de la imagen     * @param poEjecutar Objeto que ejecuta la accion sobre una fila     * @param poEjecutarExtend Objeto que ejecuta la accion sobre multiples filas     * @param poDimension Dimesion del boton     * @param psGrupo Grupo del Boton     */    public JBotonRelacionado(String psNombre, String psCaption, String psImageCamino, IEjecutar poEjecutar, IEjecutarExtend poEjecutarExtend, Rectangulo poDimension, String psGrupo) {        Object loIcono=null;        if(JGUIxConfigGlobalModelo.getInstancia().getCargarIcono()==null){            JDepuracion.anadirTexto(JDepuracion.mclWARNING, getClass().getName(), "No esta establecido JGUIxConfigGlobalModelo.getInstancia().getCargarIcono(), por lo que no se veran los iconos");        }else{            try{                loIcono = JGUIxConfigGlobalModelo.getInstancia().getCargarIcono().cargarIcono(psImageCamino, poEjecutar, poEjecutarExtend);            }catch(Throwable e){                JDepuracion.anadirTexto(getClass().getName(), "Error en imagen " + psImageCamino + " por:");                                                    JDepuracion.anadirTexto(getClass().getName(), e);            }        }        setDatos(psNombre, psCaption, loIcono, poEjecutar, poEjecutarExtend, poDimension, psGrupo);    }    /**     * Creates a new instance of JBotonRelacionado     * @param psNombre Nombre     * @param psCaption Caption     * @param poIcono Icono del boton     * @param poEjecutar Objeto que ejecuta la accion sobre una fila     * @param poEjecutarExtend Objeto que ejecuta la accion sobre multiples filas     * @param poDimension Dimesion del boton     * @param psGrupo Grupo del Boton     */    public JBotonRelacionado(String psNombre, String psCaption, Object poIcono, IEjecutar poEjecutar, IEjecutarExtend poEjecutarExtend, Rectangulo poDimension, String psGrupo) {        setDatos(psNombre, psCaption, poIcono, poEjecutar, poEjecutarExtend, poDimension, psGrupo);    }    /**     * Establece los datos     * @param psNombre Nombre     * @param psCaption Caption     * @param poIcono Icono del boton     * @param poEjecutar Objeto que ejecuta la accion sobre una fila     * @param poEjecutarExtend Objeto que ejecuta la accion sobre multiples filas     * @param poDimension Dimesion del boton     * @param psGrupo Grupo del Boton     */    public void setDatos(String psNombre, String psCaption, Object poIcono, IEjecutar poEjecutar, IEjecutarExtend poEjecutarExtend, Rectangulo poDimension, String psGrupo) {        msNombre = psNombre;        msCaption = psCaption;        moIcon = poIcono;        moEjecutar = poEjecutar;        moEjecutarExtend=poEjecutarExtend;        moDimension = poDimension;        msGrupo=psGrupo;    }    public void ejecutar(int[] plIndex) throws Exception {        if(moEjecutarExtend==null){            if(plIndex.length==0){                moEjecutar.actionPerformed(new ActionEventCZ(this, 0, msNombre), -1);            }else{                moEjecutar.actionPerformed(new ActionEventCZ(this, 0, msNombre), plIndex[0]);            }        }else{            moEjecutarExtend.actionPerformed(new ActionEventCZ(this, 0, msNombre), plIndex);        }    }    public String getCaption() {        return msCaption;    }    public void setCaption(String psCaption) {        msCaption=psCaption;    }    public void setDimension(final Rectangulo poDimension){        moDimension = poDimension;    }    public Rectangulo getDimension(){        return moDimension;    }        public String getGrupo(){        return msGrupo;    }    public boolean isEsPrincipal() {        return mbEsPrincipal;    }    public void setEsPrincipal(boolean mbEsPrincipal) {        this.mbEsPrincipal = mbEsPrincipal;    }    public String getNombre() {        return msNombre;    }    public boolean isActivo() {        return mbActivo && mbActivoSeguridad;    }    public void setActivo(boolean pbActivo) {        mbActivo = pbActivo;    }    public void setActivoSeguridad(boolean pbActivo) {        mbActivoSeguridad = pbActivo;    }    public Object getIcono(){        return moIcon;    }    public void setIcono(Object poIcon){        moIcon=poIcon;    }    public boolean getVisible() {        return isActivo();    }    public void setVisible(boolean pbActivo) {        setActivo(pbActivo);    }}