/*
 * JPrincipal.java
 *
 * Created on 4 de septiembre de 2004, 19:06
 */

package impresionXML.impresion.xml.diseno;


import utilesGUIx.plugin.toolBar.IComponenteAplicacion;
import impresionXML.impresion.pdf.JPDFImprimirInforme;
import impresionXML.impresion.xml.JxmlBanda;
import impresionXML.impresion.xml.JxmlCuadrado;
import impresionXML.impresion.xml.JxmlFuente;
import impresionXML.impresion.xml.JxmlGuardarInforme;
import impresionXML.impresion.xml.JxmlGuardarInformeJasper;
import impresionXML.impresion.xml.JxmlImagen;
import impresionXML.impresion.xml.JxmlInforme;
import impresionXML.impresion.xml.JxmlLectorInforme;
import impresionXML.impresion.xml.JxmlLinea;
import impresionXML.impresion.xml.JxmlTexto;
import impresionXML.impresion.xml.diseno.operaciones.JOperacionDimensiones;
import impresionXML.impresion.xml.diseno.operaciones.JOperacionLimpiar;
import impresionXML.impresion.xml.diseno.operaciones.JOperacionMover;
import impresionXML.impresion.xml.diseno.operaciones.JOperacionRellenar;
import impresionXML.impresion.xml.diseno.operaciones.JOperacionZoom;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.Transferable;
import java.io.File;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import utiles.JCadenas;
import utiles.JConversiones;
import utilesGUIx.formsGenericos.IPanelControlador;
import utilesGUIx.plugin.IPlugIn;
import utilesGUIx.plugin.IPlugInConsulta;
import utilesGUIx.plugin.IPlugInContexto;
import utilesGUIx.plugin.IPlugInFrame;import utilesGUIx.plugin.JPlugInUtilidades;


import utilesGUIx.aplicacion.JFormPrincipal;
import utilesGUIx.formsGenericos.CallBack;
import utilesGUIx.formsGenericos.JMostrarPantalla;
import utilesGUIx.formsGenericos.JMostrarPantallaParam;
import utilesGUIx.msgbox.JMsgBox;



public class JPlugInPrincipal extends javax.swing.JFrame implements IPlugIn, ClipboardOwner {
    private static final long serialVersionUID = 1L;

    public static final String mcsArchivo = JFormPrincipal.mcsArchivo;

    public JPlugInPrincipal(){
        
    }
    public void procesarInicial(IPlugInContexto poContexto) {
        initComponents();
        jMenuArchivo.setActionCommand(JFormPrincipal.mcsArchivo);

        JPlugInUtilidades.addBotones(
                poContexto.getFormPrincipal(),
                jToolBar1);
        JPlugInUtilidades.addMenusFrame(poContexto.getFormPrincipal(), jMenuBar1);
        JPlugInUtilidades.addBotones(poContexto.getFormPrincipal(), jDesktopPane1);
        
        poContexto.getFormPrincipal().getListaComponentesAplicacion().getComponente(IComponenteAplicacion.mcsGRUPOMENU, JFormPrincipal.mcsLogin).setActivo(false);
        poContexto.getFormPrincipal().getListaComponentesAplicacion().getComponente(IComponenteAplicacion.mcsGRUPOMENU, JFormPrincipal.mcsBaseDatos).setActivo(false);
        poContexto.getFormPrincipal().getListaComponentesAplicacion().getComponente(IComponenteAplicacion.mcsGRUPOMENU, JFormPrincipal.mcsPropiedades).setActivo(false);
        
        
    }
    public void procesarConsulta(IPlugInContexto poContexto, IPlugInConsulta poConsulta) {
    }

    public void procesarEdicion(IPlugInContexto poContexto, IPlugInFrame poFrame) {
    }

    public void procesarControlador(IPlugInContexto poContexto, IPanelControlador poControlador) {
    }

    public void lostOwnership(Clipboard clipboard, Transferable contents) {
    }
    public void procesarFinal(IPlugInContexto poContexto) {
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jToolBar1 = new javax.swing.JToolBar();
        btnToolNuevo = new javax.swing.JButton();
        btnToolAbrir = new javax.swing.JButton();
        btnToolGuardar = new javax.swing.JButton();
        btnToolImprimir = new javax.swing.JButton();
        btnToolVistaPreliminar = new javax.swing.JButton();
        btnPegar = new javax.swing.JButton();
        btnCopiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnTexto = new javax.swing.JButton();
        btnImagen = new javax.swing.JButton();
        btnCuadrado = new javax.swing.JButton();
        btnLinea = new javax.swing.JButton();
        btnFuente = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnFondo = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        btnAbrirInforme = new javax.swing.JButton();
        btnNuevoInforme = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jProcesoThreadGroup1 = new utilesGUIx.controlProcesos.JProcesoThreadGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuANuevoXML = new javax.swing.JMenuItem();
        jMenuAAbrirXML = new javax.swing.JMenuItem();
        jMenuAGuardarXML = new javax.swing.JMenuItem();
        jMenuAOpcionesXML = new javax.swing.JMenuItem();
        jMenuAImprimirXML = new javax.swing.JMenuItem();
        jMenuAVistaPreliminarXML = new javax.swing.JMenuItem();
        jMenuAGuardarJasper = new javax.swing.JMenuItem();
        jMenuFunciones = new javax.swing.JMenu();
        jMenuFMover = new javax.swing.JMenuItem();
        jMenuFLimpiarTexts = new javax.swing.JMenuItem();
        jMenuFRellenarTextos = new javax.swing.JMenuItem();
        jMenuFModifDimensiones = new javax.swing.JMenuItem();
        jMenuFModZoom = new javax.swing.JMenuItem();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuAyudaAcercaDE = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Impresión Fichas técnicas");
        setName("FichasTecnicas"); // NOI18N

        btnToolNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Add16.gif"))); // NOI18N
        btnToolNuevo.setActionCommand("Nuevo informe");
        btnToolNuevo.setFocusable(false);
        btnToolNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToolNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnToolNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnToolNuevo);

        btnToolAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Open16.gif"))); // NOI18N
        btnToolAbrir.setActionCommand("Abrir informe");
        btnToolAbrir.setFocusable(false);
        btnToolAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToolAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnToolAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnToolAbrir);

        btnToolGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Save16.gif"))); // NOI18N
        btnToolGuardar.setActionCommand("Guardar informe");
        btnToolGuardar.setFocusable(false);
        btnToolGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToolGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnToolGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnToolGuardar);

        btnToolImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Print16.gif"))); // NOI18N
        btnToolImprimir.setActionCommand("Imprimir informe");
        btnToolImprimir.setFocusable(false);
        btnToolImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToolImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnToolImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnToolImprimir);

        btnToolVistaPreliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/PrintPreview16.gif"))); // NOI18N
        btnToolVistaPreliminar.setToolTipText("Vista preliminar");
        btnToolVistaPreliminar.setActionCommand("Vista preliminar");
        btnToolVistaPreliminar.setFocusable(false);
        btnToolVistaPreliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToolVistaPreliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnToolVistaPreliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolVistaPreliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnToolVistaPreliminar);

        btnPegar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Paste16.gif"))); // NOI18N
        btnPegar.setToolTipText("Pegar");
        btnPegar.setActionCommand("Pegar");
        btnPegar.setFocusable(false);
        btnPegar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPegar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPegarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPegar);

        btnCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Copy16.gif"))); // NOI18N
        btnCopiar.setToolTipText("Copiar");
        btnCopiar.setActionCommand("Copiar");
        btnCopiar.setFocusable(false);
        btnCopiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCopiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCopiar);

        jButton1.setText("  ");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        btnTexto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/palette_text.gif"))); // NOI18N
        btnTexto.setToolTipText("Texto");
        btnTexto.setActionCommand("Texto");
        btnTexto.setFocusable(false);
        btnTexto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTexto.setMaximumSize(new java.awt.Dimension(28, 28));
        btnTexto.setMinimumSize(new java.awt.Dimension(28, 28));
        btnTexto.setPreferredSize(new java.awt.Dimension(28, 28));
        btnTexto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTextoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTexto);

        btnImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/photo.png"))); // NOI18N
        btnImagen.setToolTipText("Imagen");
        btnImagen.setActionCommand("Imagen");
        btnImagen.setFocusable(false);
        btnImagen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImagen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImagen);

        btnCuadrado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/frame_edit.png"))); // NOI18N
        btnCuadrado.setToolTipText("Cuadrado");
        btnCuadrado.setActionCommand("Cuadrado");
        btnCuadrado.setFocusable(false);
        btnCuadrado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCuadrado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuadradoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCuadrado);

        btnLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/del.png"))); // NOI18N
        btnLinea.setToolTipText("Línea");
        btnLinea.setActionCommand("Línea");
        btnLinea.setFocusable(false);
        btnLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLinea.setMaximumSize(new java.awt.Dimension(28, 28));
        btnLinea.setMinimumSize(new java.awt.Dimension(28, 28));
        btnLinea.setPreferredSize(new java.awt.Dimension(28, 28));
        btnLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLinea);

        btnFuente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/debian-apps-text.png"))); // NOI18N
        btnFuente.setToolTipText("Fuente");
        btnFuente.setActionCommand("Fuente");
        btnFuente.setFocusable(false);
        btnFuente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFuente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFuenteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFuente);

        jButton2.setText("  ");
        jButton2.setActionCommand("dfsd");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        btnFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/games_config_board.png"))); // NOI18N
        btnFondo.setToolTipText("Fondo no imprimible");
        btnFondo.setActionCommand("Fondo no imprimible");
        btnFondo.setFocusable(false);
        btnFondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFondo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFondoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFondo);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setTitle("General");
        jInternalFrame1.setName("General"); // NOI18N
        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(new java.awt.GridLayout(0, 2));

        btnAbrirInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Open16.gif"))); // NOI18N
        btnAbrirInforme.setText("Abrir informe");
        btnAbrirInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirInformeActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(btnAbrirInforme);

        btnNuevoInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Add16.gif"))); // NOI18N
        btnNuevoInforme.setText("Nuevo informe");
        btnNuevoInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoInformeActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(btnNuevoInforme);

        jDesktopPane1.add(jInternalFrame1);
        jInternalFrame1.setBounds(20, 30, 360, 170);

        getContentPane().add(jDesktopPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("    ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jProcesoThreadGroup1.setMinimumSize(new java.awt.Dimension(100, 20));
        jProcesoThreadGroup1.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel1.add(jProcesoThreadGroup1, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jMenuArchivo.setMnemonic('a');
        jMenuArchivo.setText("Archivo");

        jMenuANuevoXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Add16.gif"))); // NOI18N
        jMenuANuevoXML.setText("Nuevo informe");
        jMenuANuevoXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuANuevoXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuANuevoXML);

        jMenuAAbrirXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Open16.gif"))); // NOI18N
        jMenuAAbrirXML.setText("Abrir informe");
        jMenuAAbrirXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAAbrirXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAAbrirXML);

        jMenuAGuardarXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Save16.gif"))); // NOI18N
        jMenuAGuardarXML.setText("Guardar informe");
        jMenuAGuardarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAGuardarXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAGuardarXML);

        jMenuAOpcionesXML.setText("Opciones informe");
        jMenuAOpcionesXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAOpcionesXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAOpcionesXML);

        jMenuAImprimirXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Print16.gif"))); // NOI18N
        jMenuAImprimirXML.setText("Imprimir informe");
        jMenuAImprimirXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAImprimirXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAImprimirXML);

        jMenuAVistaPreliminarXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/PrintPreview16.gif"))); // NOI18N
        jMenuAVistaPreliminarXML.setText("Vista preliminar");
        jMenuAVistaPreliminarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAVistaPreliminarXMLActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAVistaPreliminarXML);

        jMenuAGuardarJasper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Save16.gif"))); // NOI18N
        jMenuAGuardarJasper.setText("Guardar informe jasperReport");
        jMenuAGuardarJasper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAGuardarJasperActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuAGuardarJasper);

        jMenuBar1.add(jMenuArchivo);

        jMenuFunciones.setText("Funciones informe");

        jMenuFMover.setText("mover todos componentes");
        jMenuFMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFMoverActionPerformed(evt);
            }
        });
        jMenuFunciones.add(jMenuFMover);

        jMenuFLimpiarTexts.setText("Limpiar textos CON NOMBRE");
        jMenuFLimpiarTexts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFLimpiarTextsActionPerformed(evt);
            }
        });
        jMenuFunciones.add(jMenuFLimpiarTexts);

        jMenuFRellenarTextos.setText("Rellenar textos CON NOMBRE");
        jMenuFRellenarTextos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFRellenarTextosActionPerformed(evt);
            }
        });
        jMenuFunciones.add(jMenuFRellenarTextos);

        jMenuFModifDimensiones.setText("Modificar dimensiones textos (alto+0.1)");
        jMenuFModifDimensiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFModifDimensionesActionPerformed(evt);
            }
        });
        jMenuFunciones.add(jMenuFModifDimensiones);

        jMenuFModZoom.setText("Zoom");
        jMenuFModZoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFModZoomActionPerformed(evt);
            }
        });
        jMenuFunciones.add(jMenuFModZoom);

        jMenuBar1.add(jMenuFunciones);

        jMenuAyuda.setText("Ayuda");

        jMenuAyudaAcercaDE.setText("Acerca de...");
        jMenuAyudaAcercaDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAyudaAcercaDEActionPerformed(evt);
            }
        });
        jMenuAyuda.add(jMenuAyudaAcercaDE);

        jMenuBar1.add(jMenuAyuda);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jMenuAyudaAcercaDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAyudaAcercaDEActionPerformed
        try{
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuAyudaAcercaDEActionPerformed

    private void jMenuAOpcionesXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAOpcionesXMLActionPerformed

        try{
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }
    }//GEN-LAST:event_jMenuAOpcionesXMLActionPerformed

    private void jMenuAGuardarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAGuardarXMLActionPerformed
        try{
            Object loObj = JDatosGeneralesP.getDatosGenerales().getActiveInternalFrame();
            if(loObj!=null && loObj instanceof JInternalFrame){
                JInternalFrame loI=(JInternalFrame) loObj;
                if(loI.getContentPane().getComponent(0) instanceof JPanelPreview){
                    JxmlInforme loInforme = ((JPanelPreview)loI.getContentPane().getComponent(0)).getInforme();
                    JFileChooser loFileM = new JFileChooser();
                    loFileM.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    loFileM.setSelectedFile(new File(loInforme.getInformeFisico()));
                    if(loFileM.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                        File loFile = loFileM.getSelectedFile();
                        JxmlGuardarInforme.guardarInforme(
                                loInforme
                                , loFile.getAbsolutePath());
                    }
                    
                    
                }
            }
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuAGuardarXMLActionPerformed

    private void jMenuAAbrirXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAAbrirXMLActionPerformed
        try{
            File loFile = null;
            JFileChooser loFileM = new JFileChooser();
            String lsValor = JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML().getPropiedad("Abrir");
            if(!JCadenas.isVacio(lsValor)){
                loFileM.setSelectedFile(new File(lsValor));
            }
            loFileM.setFileSelectionMode(JFileChooser.FILES_ONLY);
            if(loFileM.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                loFile = loFileM.getSelectedFile();
                
                JxmlInforme loInforme = JxmlLectorInforme.leerInforme(loFile.getAbsolutePath());
                JPanelPreview loPrev = new JPanelPreview();
                loPrev.setDatos(loInforme);
                JDatosGeneralesP.getDatosGenerales().mostrarForm(
                        new JMostrarPantallaParam(
                            loPrev, 800, 600, JMostrarPantalla.mclEdicionInternal,
                            loInforme.getNombre()
                        ));
                
                JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML().setPropiedad("Abrir", loFile.getAbsolutePath());
                JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML().guardarFichero();
                        
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuAAbrirXMLActionPerformed

    private void jMenuANuevoXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuANuevoXMLActionPerformed
        try{
            JxmlInforme loInforme = new JxmlInforme("");
            
            JxmlBanda loB = new JxmlBanda();
            loB.setNombre("general");
            loB.setExtensible(true);
            loInforme.add(loB);
            
            JxmlFuente loF = new JxmlFuente();
            loF.setNombre("general");
            loInforme.add(loF);

            JPanelPreview loPrev = new JPanelPreview();
            loPrev.setDatos(loInforme);
            JDatosGeneralesP.getDatosGenerales().mostrarFormPrinci(loPrev, 800, 600, JMostrarPantalla.mclEdicionInternal);
            
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuANuevoXMLActionPerformed

    private void jMenuAImprimirXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAImprimirXMLActionPerformed
        try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                loInforme.imprimir("pdf", true);
            }
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }
        
    }//GEN-LAST:event_jMenuAImprimirXMLActionPerformed

    private JxmlInforme getInforme(){
        JPanelPreview loPreview = getPanelPreview();
        if(loPreview!=null ){
            return loPreview.getInforme();
        }        
        return null;
    }
    private JPanelPreview getPanelPreview(){
        Object loObj = JDatosGeneralesP.getDatosGenerales().getActiveInternalFrame();
        if(loObj!=null && loObj instanceof JInternalFrame){
            JInternalFrame loI=(JInternalFrame) loObj;
            if(loI.getContentPane().getComponent(0) instanceof JPanelPreview){
                return  ((JPanelPreview)loI.getContentPane().getComponent(0));
            }
        }
        return null;
    }
    
    private void jMenuFMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFMoverActionPerformed
        try{
            final JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                final JT2Parametros loParam = new JT2Parametros();
                loParam.mostrar(new CallBack() {
                    public void callBack(Object poControlador) {
                        if(!loParam.mbCancelado){
                            final JT2Parametros loParam2 = new JT2Parametros();
                            loParam2.mstitulo="Mover componentes a partir de";
                            try {
                                loParam2.mostrar(new CallBack() {
                                    public void callBack(Object poControlador) {
                                        try {
                                            JOperacionMover loOp = new JOperacionMover(loInforme, loParam.x, loParam.y, loParam2.x, loParam2.y);
                                            loInforme.visitar(loOp);
                                        } catch (Throwable ex) {
                                            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(JPlugInPrincipal.this, ex);
                                        }
                                    }
                                });
                            } catch (Exception ex) {
                                utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(JPlugInPrincipal.this, ex);
                            }

                        }
                    }
                });
                
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }
        
        
    }//GEN-LAST:event_jMenuFMoverActionPerformed

    private void jMenuFLimpiarTextsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFLimpiarTextsActionPerformed
        try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                if(JOptionPane.showConfirmDialog(this, "¿Deseas limpiar todos los textos de los campos con nombre?", "", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    JOperacionLimpiar loOp = new JOperacionLimpiar(loInforme);
                    loInforme.visitar(loOp);                    
                }
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuFLimpiarTextsActionPerformed

    private void jMenuFRellenarTextosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFRellenarTextosActionPerformed
        try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                if(JOptionPane.showConfirmDialog(this, "¿Deseas rellenar todos los textos de los campos con nombre?", "", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    JOperacionRellenar loOp = new JOperacionRellenar();
                    loInforme.visitar(loOp);                    
                }
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuFRellenarTextosActionPerformed

    private void btnToolNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolNuevoActionPerformed
        jMenuANuevoXMLActionPerformed(null);
    }//GEN-LAST:event_btnToolNuevoActionPerformed

    private void btnToolAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolAbrirActionPerformed
        jMenuAAbrirXMLActionPerformed(null);
    }//GEN-LAST:event_btnToolAbrirActionPerformed

    private void btnToolGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolGuardarActionPerformed
        jMenuAGuardarXMLActionPerformed(null);
    }//GEN-LAST:event_btnToolGuardarActionPerformed

    private void btnToolImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolImprimirActionPerformed
        jMenuAImprimirXMLActionPerformed(null);
    }//GEN-LAST:event_btnToolImprimirActionPerformed

    private void btnAbrirInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirInformeActionPerformed
        jMenuAAbrirXMLActionPerformed(null);
    }//GEN-LAST:event_btnAbrirInformeActionPerformed

    private void btnNuevoInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoInformeActionPerformed
        jMenuANuevoXMLActionPerformed(null);
    }//GEN-LAST:event_btnNuevoInformeActionPerformed

    private void jMenuAVistaPreliminarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAVistaPreliminarXMLActionPerformed
         try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                File loFilePDFOriginal = new File("prueba.pdf");
                FileOutputStream loFileO = new FileOutputStream(loFilePDFOriginal);
                try{
                    JPDFImprimirInforme.imprimir(loInforme, loFileO);
                    utilesx.JEjecutar.abrirDocumento("prueba.pdf");
                }finally{
                    loFileO.close();
                }
            }
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }
    }//GEN-LAST:event_jMenuAVistaPreliminarXMLActionPerformed

    private void btnToolVistaPreliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolVistaPreliminarActionPerformed
        jMenuAVistaPreliminarXMLActionPerformed(null);
    }//GEN-LAST:event_btnToolVistaPreliminarActionPerformed

    private void jMenuFModifDimensionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFModifDimensionesActionPerformed
        try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                if(JOptionPane.showConfirmDialog(this, "¿Deseas modificar dimensiones de TODOS los textos?", "", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    JOperacionDimensiones loOp = new JOperacionDimensiones(loInforme, 0.1, 0.0);
                    loInforme.visitar(loOp);                    
                }
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuFModifDimensionesActionPerformed

    private void jMenuFModZoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFModZoomActionPerformed
        try{
            JxmlInforme loInforme = getInforme();
            if(loInforme!=null ){
                String lsZoom = JOptionPane.showInputDialog("Zoom", String.valueOf(loInforme.getDiseno().getZoom()));
                if(JConversiones.isNumeric(lsZoom)){
                    loInforme.getDiseno().setZoom(JConversiones.cdbl(lsZoom));
                    JOperacionZoom loOp = new JOperacionZoom(loInforme);
                    loInforme.visitar(loOp);
                    
                }else{
                    throw new Exception("Zoom ("+lsZoom+") incorrecto ");
                }
            }
            
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }
        
    }//GEN-LAST:event_jMenuFModZoomActionPerformed

    private void btnPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPegarActionPerformed
        try {
            getPanelPreview().getPanelDesign().pegar();
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnPegarActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        try {
            getPanelPreview().getPanelDesign().copiar();
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnCopiarActionPerformed

    private void btnTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTextoActionPerformed
        try {
            getPanelPreview().getPanelDesign().addNuevo(JFactoryDesignXML.getInstance().getDesignXMLElem(JxmlTexto.mcsNombreXml));
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnTextoActionPerformed

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        try {
            getPanelPreview().getPanelDesign().addNuevo(JFactoryDesignXML.getInstance().getDesignXMLElem(JxmlImagen.mcsNombreXml));
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuadradoActionPerformed
        try {
            getPanelPreview().getPanelDesign().addNuevo(JFactoryDesignXML.getInstance().getDesignXMLElem(JxmlCuadrado.mcsNombreXml));
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnCuadradoActionPerformed

    private void btnLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineaActionPerformed
        try {
            getPanelPreview().getPanelDesign().addNuevo(JFactoryDesignXML.getInstance().getDesignXMLElem(JxmlLinea.mcsNombreXml));
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnLineaActionPerformed

    private void btnFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFondoActionPerformed
        try {
            getPanelPreview().getPanelDesign().cambiarFondo();
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnFondoActionPerformed

    private void btnFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFuenteActionPerformed
        try {
            getPanelPreview().getPanelDesign().addNuevo(JFactoryDesignXML.getInstance().getDesignXMLElem(JxmlFuente.mcsNombreXml));
        } catch (Throwable ex) {
            JMsgBox.mensajeError(this, ex);
        }

    }//GEN-LAST:event_btnFuenteActionPerformed

    private void jMenuAGuardarJasperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAGuardarJasperActionPerformed
        try{
            Object loObj = JDatosGeneralesP.getDatosGenerales().getActiveInternalFrame();
            if(loObj!=null && loObj instanceof JInternalFrame){
                JInternalFrame loI=(JInternalFrame) loObj;
                if(loI.getContentPane().getComponent(0) instanceof JPanelPreview){
                    JxmlInforme loInforme = ((JPanelPreview)loI.getContentPane().getComponent(0)).getInforme();
                    JFileChooser loFileM = new JFileChooser();
                    loFileM.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    if(!JCadenas.isVacio(loInforme.getInformeFisico()) && loInforme.getInformeFisico().length()>3){
                        String lsInf = loInforme.getInformeFisico().substring(0, loInforme.getInformeFisico().length()-3);
                        lsInf=lsInf+"jrxml";
                        loFileM.setSelectedFile(new File(lsInf));
                    }
                    if(loFileM.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                        File loFile = loFileM.getSelectedFile();
                        new JxmlGuardarInformeJasper(loInforme).guardarInforme(
                                loFile.getAbsolutePath());
                    }
                    
                    
                }
            }
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeErrorYLog(this, e);
        }

    }//GEN-LAST:event_jMenuAGuardarJasperActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirInforme;
    private javax.swing.JButton btnCopiar;
    private javax.swing.JButton btnCuadrado;
    private javax.swing.JButton btnFondo;
    private javax.swing.JButton btnFuente;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnLinea;
    private javax.swing.JButton btnNuevoInforme;
    private javax.swing.JButton btnPegar;
    private javax.swing.JButton btnTexto;
    private javax.swing.JButton btnToolAbrir;
    private javax.swing.JButton btnToolGuardar;
    private javax.swing.JButton btnToolImprimir;
    private javax.swing.JButton btnToolNuevo;
    private javax.swing.JButton btnToolVistaPreliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuAAbrirXML;
    private javax.swing.JMenuItem jMenuAGuardarJasper;
    private javax.swing.JMenuItem jMenuAGuardarXML;
    private javax.swing.JMenuItem jMenuAImprimirXML;
    private javax.swing.JMenuItem jMenuANuevoXML;
    private javax.swing.JMenuItem jMenuAOpcionesXML;
    private javax.swing.JMenuItem jMenuAVistaPreliminarXML;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuItem jMenuAyudaAcercaDE;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuFLimpiarTexts;
    private javax.swing.JMenuItem jMenuFModZoom;
    private javax.swing.JMenuItem jMenuFModifDimensiones;
    private javax.swing.JMenuItem jMenuFMover;
    private javax.swing.JMenuItem jMenuFRellenarTextos;
    private javax.swing.JMenu jMenuFunciones;
    private javax.swing.JPanel jPanel1;
    private utilesGUIx.controlProcesos.JProcesoThreadGroup jProcesoThreadGroup1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables





    
}
