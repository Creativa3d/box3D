/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package impresionXML.impresion.xml.diseno.componentes;

import utilesGUIx.Rectangulo;
import ListDatos.IFilaDatos;
import ListDatos.JListDatos;
import ListDatos.JUtilTabla;
import impresionXML.impresion.xml.JxmlCuadrado;
import impresionXML.impresion.xml.JxmlInforme;
import impresionXML.impresion.xml.diseno.campos.JTCAMPOS;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.geom.Point2D;
import javax.swing.JColorChooser;
import utiles.JConversiones;
import utilesGUI.tiposTextos.JTipoTextoEstandar;

import utilesGUIx.formsGenericos.CallBack;
import utilesGUIx.formsGenericos.IPanelControlador;
import utilesGUIx.formsGenericos.busqueda.IConsulta;
import utilesGUIx.formsGenericos.busqueda.JBusqueda;
import utilesGUIx.formsGenericos.edicion.JPanelEdicionAbstract;
import utilesGUIx.msgbox.JMsgBox;

/**
 *
 * @author eduardo
 */
public class JPanelCuadradoPROPER extends JPanelEdicionAbstract implements ActionListener, FocusListener {
    private JxmlCuadrado moCuadrado;
    private JxmlInforme moInforme;
    private boolean mbMostrarDatos=false;

    /**
     * Creates new form JPanelCuadradoVIEW
     */
    public JPanelCuadradoPROPER() {
        initComponents();
        txtNombre.addActionListener(this);
        txtX.addActionListener(this);
        txtY.addActionListener(this);
        txtX2.addActionListener(this);
        txtY2.addActionListener(this);
        txtAncho.addActionListener(this);
        
        txtNombre.addFocusListener(this);
        txtX.addFocusListener(this);
        txtY.addFocusListener(this);
        txtX2.addFocusListener(this);
        txtY2.addFocusListener(this);
        txtAncho.addFocusListener(this);
        
    }
    
    public void setDatos(JxmlCuadrado poCuadrado, JxmlInforme poInforme){
        moCuadrado=poCuadrado;
        moInforme=poInforme;
    }


    public void rellenarPantalla() throws Exception {
        mbMostrarDatos=true;
        try{
        }finally{
            mbMostrarDatos=false;
        }
        
    }

    public void habilitarSegunEdicion() throws Exception {
    }

    public void ponerTipoTextos() throws Exception {
        txtX.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
        txtY.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
        txtX2.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
        txtY2.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
        txtAncho.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
    }

    public void mostrarDatos() throws Exception {
        mbMostrarDatos=true;
        try{
            txtNombre.setValueTabla(moCuadrado.getNombre());
            txtX.setValueTabla(String.valueOf(moCuadrado.getPunto1().getX()));
            txtY.setValueTabla(String.valueOf(moCuadrado.getPunto1().getY()));
            txtX2.setValueTabla(String.valueOf(moCuadrado.getPunto2().getX()));
            txtY2.setValueTabla(String.valueOf(moCuadrado.getPunto2().getY()));
            txtAncho.setValueTabla(String.valueOf(moCuadrado.getEstiloLinea().mdGrosor));
        }finally{
            mbMostrarDatos=false;
        }
    }

    public void establecerDatos() throws Exception {
        Point2D loPos = new Point2D.Double(
                Double.valueOf(txtX.getText()).doubleValue()
                , Double.valueOf(txtY.getText()).doubleValue()
                );
        moCuadrado.setPunto1(loPos);
        loPos = new Point2D.Double(
                Double.valueOf(txtX2.getText()).doubleValue()
                , Double.valueOf(txtY2.getText()).doubleValue()
                );
        moCuadrado.setPunto2(loPos);
        moCuadrado.getEstiloLinea().mdGrosor= (float) JConversiones.cdbl(txtAncho.getText());
        moCuadrado.setNombre(txtNombre.getText());
        moCuadrado.firePropertyChange("", true, false);
    }
    public void aceptar() throws Exception {
    }

    public void cancelar() throws Exception {
    }


    public Rectangulo getTanano() {
        return new Rectangulo(400, 300);
    }

    public String getTitulo() {
        return "Cuadrado";
    }
    public void actionPerformed(ActionEvent e) {
        try {
            if(!mbMostrarDatos){
                establecerDatos();
            }
        } catch (Exception ex) {
            JMsgBox.mensajeErrorYLog(this, ex);
        }
    }
    public void focusGained(FocusEvent e) {
    }

    public void focusLost(FocusEvent e) {
        actionPerformed(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabelCZ1 = new utilesGUIx.JLabelCZ();
        txtNombre = new utilesGUIx.JTextFieldCZ();
        btnBuscarNombre = new utilesGUIx.JButtonCZ();
        jLabelCZ2 = new utilesGUIx.JLabelCZ();
        txtX = new utilesGUIx.JTextFieldCZ();
        jLabelCZ3 = new utilesGUIx.JLabelCZ();
        txtY = new utilesGUIx.JTextFieldCZ();
        jLabelCZ4 = new utilesGUIx.JLabelCZ();
        txtX2 = new utilesGUIx.JTextFieldCZ();
        jLabelCZ5 = new utilesGUIx.JLabelCZ();
        txtY2 = new utilesGUIx.JTextFieldCZ();
        jLabelCZ6 = new utilesGUIx.JLabelCZ();
        txtAncho = new utilesGUIx.JTextFieldCZ();
        lblColor = new utilesGUIx.JLabelCZ();
        jPanel1 = new javax.swing.JPanel();
        btnEliminar = new utilesGUIx.JButtonCZ();
        btnEliminar1 = new utilesGUIx.JButtonCZ();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cuadrado");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        jLabelCZ1.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtNombre, gridBagConstraints);

        btnBuscarNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Zoom16.gif"))); // NOI18N
        btnBuscarNombre.setToolTipText("Buscar nombre");
        btnBuscarNombre.setMaximumSize(new java.awt.Dimension(25, 25));
        btnBuscarNombre.setMinimumSize(new java.awt.Dimension(25, 25));
        btnBuscarNombre.setPreferredSize(new java.awt.Dimension(25, 25));
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        add(btnBuscarNombre, gridBagConstraints);

        jLabelCZ2.setText("X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtX, gridBagConstraints);

        jLabelCZ3.setText("Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtY, gridBagConstraints);

        jLabelCZ4.setText("X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtX2, gridBagConstraints);

        jLabelCZ5.setText("Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtY2, gridBagConstraints);

        jLabelCZ6.setText("Ancho");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(jLabelCZ6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(txtAncho, gridBagConstraints);

        lblColor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblColor.setText("Color");
        lblColor.setOpaque(true);
        lblColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColorMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(lblColor, gridBagConstraints);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/impresionXML/impresion/xml/diseno/img/Delete16.gif"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);

        btnEliminar1.setText("Clonar");
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColorMouseClicked

        //        final JColorChooser colorChooser = new JColorChooser();         
        Color loColor = JColorChooser.showDialog(this, "", lblColor.getBackground());         
        if (loColor != null) {             
            lblColor.setBackground(loColor);         
        }     
        actionPerformed(null);
        
    }//GEN-LAST:event_lblColorMouseClicked

    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
        try {
            
            JBusqueda loBus = new JBusqueda(new IConsulta() {
                JTCAMPOS loCampos;

                public void refrescar(boolean pbPasarACache, boolean pbLimpiarCache) throws Exception {
                    loCampos = moInforme.getDiseno().getTablaCamposPredefinidos();
                    loCampos.getList().getFiltro().addCondicionAND(JListDatos.mclTIgual, JTCAMPOS.lPosiTIPO, JxmlCuadrado.mcsNombreXml);
                    loCampos.getList().filtrar();
                    loCampos.moList = JUtilTabla.clonarFilasListDatos(loCampos.getList(), false);
                }

                public JListDatos getList() {
                    return loCampos.moList;
                }

                public void addFilaPorClave(IFilaDatos poFila) throws Exception {
                }

                public boolean getPasarCache() {
                    return false;
                }
            }, "Campos");
            
            loBus.getParametros().setCallBack(new CallBack<IPanelControlador>() {

                public void callBack(IPanelControlador poControlador) {
                    try {
                        poControlador.getConsulta().getList().setIndex(poControlador.getIndex());
                        txtNombre.setText(poControlador.getConsulta().getList().getFields(JTCAMPOS.lPosiNOMBRE).getString());
                        establecerDatos();
                    } catch (Exception ex) {
                        JMsgBox.mensajeErrorYLog(JPanelCuadradoPROPER.this, ex);
                    }
                }
            });
            
            loBus.mostrarBusq();
            
        } catch (Exception ex) {
            JMsgBox.mensajeErrorYLog(this, ex);
        }

    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            moInforme.getBanda(0).remove(moCuadrado);
            moCuadrado = new JxmlCuadrado();
            mostrarDatos();
        } catch (Exception ex) {
            JMsgBox.mensajeErrorYLog(this, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        try {
            JxmlCuadrado loXML = (JxmlCuadrado) moCuadrado.clone();
            moInforme.getBanda(0).add(loXML);
//            IXMLDesign loDesig = JFactoryDesignXML.getInstance().getDesignXML(loXML, moInforme);
//            add(loDesig);
            
        } catch (Exception ex) {
            JMsgBox.mensajeErrorYLog(this, ex);
        }
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUIx.JButtonCZ btnBuscarNombre;
    private utilesGUIx.JButtonCZ btnEliminar;
    private utilesGUIx.JButtonCZ btnEliminar1;
    private javax.swing.JLabel jLabel1;
    private utilesGUIx.JLabelCZ jLabelCZ1;
    private utilesGUIx.JLabelCZ jLabelCZ2;
    private utilesGUIx.JLabelCZ jLabelCZ3;
    private utilesGUIx.JLabelCZ jLabelCZ4;
    private utilesGUIx.JLabelCZ jLabelCZ5;
    private utilesGUIx.JLabelCZ jLabelCZ6;
    private javax.swing.JPanel jPanel1;
    private utilesGUIx.JLabelCZ lblColor;
    private utilesGUIx.JTextFieldCZ txtAncho;
    private utilesGUIx.JTextFieldCZ txtNombre;
    private utilesGUIx.JTextFieldCZ txtX;
    private utilesGUIx.JTextFieldCZ txtX2;
    private utilesGUIx.JTextFieldCZ txtY;
    private utilesGUIx.JTextFieldCZ txtY2;
    // End of variables declaration//GEN-END:variables



}
