/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JGuiResultadosImpresion.java
 *
 * Created on 24-jun-2009, 12:43:37
 */

package paquetesGeneradorInf.gui.resultados;

import ListDatos.JListDatos;
import impresionJasper.JInfGeneralJasper;
import java.awt.Rectangle;
import java.io.File;
import java.net.URL;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import paquetesGeneradorInf.gui.JGuiConsultaDatos;
import utilesGUIx.Rectangulo;
import utilesGUIx.formsGenericos.edicion.JFormEdicionParametros;
import utilesGUIx.formsGenericos.edicion.JPanelEdicionAbstract;


public class JGuiResultadosImpresion extends JPanelEdicionAbstract {
    private JGuiConsultaDatos moDatos;
    private JListDatos moList;
    private String[] masCampos;
    private JTableModelCamposCaption moCamposCaption;
    private JGuiResultadosControlador moContr;

    /** Creates new form JGuiResultadosImpresion */
    public JGuiResultadosImpresion() {
        initComponents();
    }

    public void setDatos(JGuiConsultaDatos poDatos, JListDatos poList, JGuiResultadosControlador poContr){
        moDatos = poDatos;
        moList = poList;
        moContr=poContr;

    }

    public void rellenarPantalla() throws Exception {
    }

    public void habilitarSegunEdicion() throws Exception {
    }

    public void ponerTipoTextos() throws Exception {
    }

    public void mostrarDatos() throws Exception {
        txtTitulo.setValueTabla(moDatos.getImpresionTitulo());
        switch(moDatos.getImpresionLineas()){
            case JInfGeneralJasper.mclEstiloLineasCuadrado:
                optLineasTodas.setSelected(true);
                break;
            case JInfGeneralJasper.mclEstiloLineasHorizontales:
                optLineasHorizontales.setSelected(true);
                break;
            default:
                optLineasNada.setSelected(true);
        }
        txtLogo.setValueTabla(moDatos.getImpresionLogo());
        masCampos = new String[moList.getFields().size()];
        for(int i = 0 ; i < moList.getFields().size(); i++){
            masCampos[i] = moList.getFields(i).getCaption();
        }

        moCamposCaption = new JTableModelCamposCaption(moList, masCampos);
        jTableCZ1.setModel(moCamposCaption);

    }

    public void establecerDatos() throws Exception {
        moDatos.setImpresionTitulo(txtTitulo.getText());
        if(optLineasTodas.isSelected()){
            moDatos.setImpresionLineas(JInfGeneralJasper.mclEstiloLineasCuadrado);
        }
        if(optLineasNada.isSelected()){
            moDatos.setImpresionLineas(JInfGeneralJasper.mclEstiloLineasNada);
        }
        if(optLineasHorizontales.isSelected()){
            moDatos.setImpresionLineas(JInfGeneralJasper.mclEstiloLineasHorizontales);
        }
        moDatos.setImpresionLogo(txtLogo.getText());
        
        for(int i = 0 ; i < moList.getFields().size(); i++){
            moList.getFields(i).setCaption(masCampos[i]);
        }


    }

    public void aceptar() throws Exception {
        moContr.getPanel().refrescar();
    }

    public void cancelar() throws Exception {

    }

    public Rectangulo getTanano() {
        return new Rectangulo(400, 400);
    }

    public String getTitulo() {
        return "Edición de propiedades de impresión";
    }
    
    public boolean validarDatos() throws Exception {
        return true;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabelCZ1 = new utilesGUIx.JLabelCZ();
        txtTitulo = new utilesGUIx.JTextFieldCZ();
        jPanel1 = new javax.swing.JPanel();
        optLineasNada = new javax.swing.JRadioButton();
        optLineasHorizontales = new javax.swing.JRadioButton();
        optLineasTodas = new javax.swing.JRadioButton();
        jLabelCZ2 = new utilesGUIx.JLabelCZ();
        txtLogo = new utilesGUIx.JTextFieldCZ();
        btnExaminarLogo = new utilesGUIx.JButtonCZ();
        lblVistaPrevia = new utilesGUIx.JLabelCZ();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCZ1 = new utilesGUIx.JTableCZ();

        setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelCZ1.setText("Título");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(jLabelCZ1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(txtTitulo, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo líneas"));
        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        buttonGroup1.add(optLineasNada);
        optLineasNada.setText("Sin líneas");
        jPanel1.add(optLineasNada);

        buttonGroup1.add(optLineasHorizontales);
        optLineasHorizontales.setText("Líneas horizontales");
        jPanel1.add(optLineasHorizontales);

        buttonGroup1.add(optLineasTodas);
        optLineasTodas.setText("Líneas horizontales y verticales");
        jPanel1.add(optLineasTodas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(jPanel1, gridBagConstraints);

        jLabelCZ2.setText("Logotipo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(jLabelCZ2, gridBagConstraints);

        txtLogo.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtLogoTextValueChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(txtLogo, gridBagConstraints);

        btnExaminarLogo.setText("Examinar");
        btnExaminarLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminarLogoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(btnExaminarLogo, gridBagConstraints);

        lblVistaPrevia.setBorder(javax.swing.BorderFactory.createTitledBorder("Vista previa"));
        lblVistaPrevia.setText("   ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel2.add(lblVistaPrevia, gridBagConstraints);

        jTabbedPane1.addTab("General", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jTableCZ1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCZ1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Nombres de columnas", jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtLogoTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtLogoTextValueChanged
        try{
            Icon loImagen;
            try{
                loImagen = new javax.swing.ImageIcon(new URL(txtLogo.getText()));
            }catch(Exception e){
                loImagen = new javax.swing.ImageIcon(txtLogo.getText());
            }
            lblVistaPrevia.setIcon(loImagen);
        }catch(Exception e){
        }
    }//GEN-LAST:event_txtLogoTextValueChanged

    private void btnExaminarLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminarLogoActionPerformed
        try{
            File loFile = null;
            try{
                loFile= new File(txtLogo.getText());
                if(!loFile.exists()){
                    loFile=null;
                }
            }catch(Exception w){
            }
            JFileChooser loFileC;
            if(loFile == null){
                loFileC = new JFileChooser();
            }else{
                loFileC = new JFileChooser(loFile);
            }
            loFileC.showOpenDialog(this);
            if(loFileC.getSelectedFile()!=null){
                txtLogo.setText(loFileC.getSelectedFile().getPath());
            }


        }catch(Exception e){
        }
    }//GEN-LAST:event_btnExaminarLogoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUIx.JButtonCZ btnExaminarLogo;
    private javax.swing.ButtonGroup buttonGroup1;
    private utilesGUIx.JLabelCZ jLabelCZ1;
    private utilesGUIx.JLabelCZ jLabelCZ2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private utilesGUIx.JTableCZ jTableCZ1;
    private utilesGUIx.JLabelCZ lblVistaPrevia;
    private javax.swing.JRadioButton optLineasHorizontales;
    private javax.swing.JRadioButton optLineasNada;
    private javax.swing.JRadioButton optLineasTodas;
    private utilesGUIx.JTextFieldCZ txtLogo;
    private utilesGUIx.JTextFieldCZ txtTitulo;
    // End of variables declaration//GEN-END:variables


}
class JTableModelCamposCaption implements TableModel {
    private JListDatos moList;
    private String[] masCaption;

    public JTableModelCamposCaption (JListDatos poList, String[] pasCaption){
        moList=poList;
        masCaption = pasCaption;
    }


    public int getRowCount() {
        return moList.size()+1;
    }

    public int getColumnCount() {
        return moList.getFields().size();
    }

    public String getColumnName(int columnIndex) {
        return moList.getFields(columnIndex).getCaption();
    }

    public Class getColumnClass(int columnIndex) {
        return String.class;
    }

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return rowIndex == 0;
    }

    public Object getValueAt(int rowIndex, int columnIndex) {
        if(rowIndex==0){
            return masCaption[columnIndex];
        }else{
            moList.setIndex(rowIndex-1);
            return moList.getFields(columnIndex).getString();
        }
    }

    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        if(rowIndex==0){
            masCaption[columnIndex] = aValue.toString();
        }
    }

    public void addTableModelListener(TableModelListener l) {

    }

    public void removeTableModelListener(TableModelListener l) {

    }


}
