/*
 * JProcesoForm.java
 *
 * Created on 26 de enero de 2004, 20:33
 */

package utilesGUI.procesar;

import utiles.timer.ITemporizador;
import utiles.timer.JTimer;

/**
 * formulario con una barra de proceso
 */
public class JProcesoForm extends java.awt.Dialog  implements java.awt.event.ActionListener, ITemporizador {
    long mlNumeroReg = 0;
    long mlNumeroAct = 0;
    /**Si se ha cancelado el proceso*/
    public boolean mbCancelado = false;

    private JTimer moTimer = new JTimer(this);

    
    /**
     * Creates new form JProcesoForm
     * @param parent padre
     * @param modal si es modal
     */
    public JProcesoForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btnCanccelar.addActionListener(this);
    }
    /**
     * Inicializa el form.
     * @param psTitulo título
     * @param plNumeroReg Número de registros
     */
    public void init(String psTitulo, long plNumeroReg){
        mlNumeroReg = plNumeroReg;
        lblTotal.setText(String.valueOf(plNumeroReg));
        lblTitulo.setText(psTitulo);
        repaint();
        validate();
    }
    /**
     * Incrementa la barra de proceso
     * @param plNumero Número
     * @param psCadenaRegActual Cadena a visualizar
     */
    public void incrementar(long plNumero, String psCadenaRegActual){
        mlNumeroAct+=plNumero;
        lblNumero.setText(String.valueOf(mlNumeroAct));
        if(mlNumeroReg>0){
            jBarraProceso1.setPorcentaje((mlNumeroAct*100)/mlNumeroReg);
        }else{
            jBarraProceso1.setPorcentaje(100);
        }
        jBarraProceso1.setTexto(psCadenaRegActual);
        update(this.getGraphics());
//        repaint();
    }
    /**
     * establece la barra de proceso
     * @param plNumeroActual Número actual
     * @param plTotal total de registros
     * @param psCadenaRegActual Cadena a visualizar
     */
    public void establecer(long plNumeroActual, int plTotal, String psCadenaRegActual){
        mlNumeroAct=plNumeroActual;
        mlNumeroReg = plTotal;
        lblTotal.setText(String.valueOf(mlNumeroReg));
        lblNumero.setText(String.valueOf(mlNumeroAct));
        jBarraProceso1.setPorcentaje((mlNumeroAct*100)/mlNumeroReg);
        jBarraProceso1.setTexto(psCadenaRegActual);
//        repaint();
        update(this.getGraphics());
    }
    
    /**Actualiza el form*/
    public void update(java.awt.Graphics g ){
      super.paint(g);
      java.awt.Rectangle loRect = jBarraProceso1.getBounds();
      jBarraProceso1.paint(g.create(loRect.x,loRect.y,loRect.width,loRect.height));
      loRect = btnCanccelar.getBounds();
      btnCanccelar.paint(g.create(loRect.x,loRect.y,loRect.width,loRect.height));
    //      paintComponents(g);
    //      this.paintAll(g);
    }

    /**Cierra el form.*/
    public void cerrar(){
        closeDialog(null);
    }
    /**Botoón cancelar*/
    public void actionPerformed(java.awt.event.ActionEvent e) {
        mbCancelado = true;
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitulo = new java.awt.Label();
        panel1 = new java.awt.Panel();
        label1 = new java.awt.Label();
        lblNumeroDescri = new java.awt.Label();
        lblNumero = new java.awt.Label();
        lblTotalDescri = new java.awt.Label();
        lblTotal = new java.awt.Label();
        jBarraProceso1 = new utilesGUI.JBarraProceso();
        btnCanccelar = new utilesGUI.ButtonCZ();

        setLayout(null);

        setResizable(false);
        setTitle("Procesando");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        lblTitulo.setAlignment(java.awt.Label.CENTER);
        lblTitulo.setBackground(java.awt.Color.lightGray);
        lblTitulo.setForeground(java.awt.Color.darkGray);
        lblTitulo.setText("Procesando...");
        add(lblTitulo);
        lblTitulo.setBounds(0, 30, 443, 19);

        panel1.setLayout(new java.awt.GridBagLayout());

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setText("Situaci\u00f3n del proceso");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.weightx = 1.0;
        panel1.add(label1, gridBagConstraints);

        lblNumeroDescri.setText("Elementos procesados");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 106);
        panel1.add(lblNumeroDescri, gridBagConstraints);

        lblNumero.setAlignment(java.awt.Label.CENTER);
        lblNumero.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.insets = new java.awt.Insets(7, 140, 0, 0);
        panel1.add(lblNumero, gridBagConstraints);

        lblTotalDescri.setText("de");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        panel1.add(lblTotalDescri, gridBagConstraints);

        lblTotal.setText("indefinido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 99;
        gridBagConstraints.insets = new java.awt.Insets(7, 1, 0, 13);
        panel1.add(lblTotal, gridBagConstraints);

        add(panel1);
        panel1.setBounds(0, 60, 443, 50);

        add(jBarraProceso1);
        jBarraProceso1.setBounds(10, 130, 410, 40);

        btnCanccelar.setLabel("Cancelar");
        add(btnCanccelar);
        btnCanccelar.setBounds(180, 180, 70, 25);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-430)/2, (screenSize.height-230)/2, 430, 230);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        moTimer.stop();
        
    }//GEN-LAST:event_formWindowClosed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    void setBarraDinamica(boolean pbBoolean, double pdDuracionIntervalo, int plNumeroIntervalos){
        if(pbBoolean){
            btnCanccelar.setVisible(false);
            lblNumero.setVisible(false);
            lblTotal.setVisible(false);
            lblNumeroDescri.setVisible(false);
            lblTotalDescri.setVisible(false);
            mlNumeroReg = plNumeroIntervalos;
            mlNumeroAct = 1;
            moTimer.setIntervalo((int)(pdDuracionIntervalo * 1000));
            moTimer.start();
        }else{
            btnCanccelar.setVisible(true);
            lblNumeroDescri.setVisible(true);
            lblTotalDescri.setVisible(true);
            lblNumero.setVisible(true);
            lblTotal.setVisible(true);
            moTimer.stop();
        }
        repaint();
//        update(this.getGraphics());
    }
     public void timerArrancado(JTimer JTimer) {
    }

    public void timerParado(JTimer JTimer) {
    }

    public void timerMuerto(JTimer JTimer) {
    }

    public void timerIntervalo(JTimer JTimer) {
        try{
            if(mlNumeroAct>=mlNumeroReg){
                mlNumeroAct=0;
            }
            incrementar(1, jBarraProceso1.getTexto());
        }catch(Throwable e){
            moTimer.stop();
        }
    }
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUI.ButtonCZ btnCanccelar;
    private utilesGUI.JBarraProceso jBarraProceso1;
    private java.awt.Label label1;
    private java.awt.Label lblNumero;
    private java.awt.Label lblNumeroDescri;
    private java.awt.Label lblTitulo;
    private java.awt.Label lblTotal;
    private java.awt.Label lblTotalDescri;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
    
}

class EjecutarDinamico implements Runnable {
    public boolean mbActiva=true;
    public JProcesoForm moForm;
    
    public void run() {
        int i = 0;
        moForm.establecer(i, 4, "");
        while(mbActiva){
            i++;
            moForm.establecer(i, 4, "");
            synchronized(this){
                try{
                    wait(2000); //esperamos 2 segundos
                }catch(Exception e){
                    
                }
            }
        }
    }
    
}