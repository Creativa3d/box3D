/*
 * JFormProp.java
 *
 * Created on 6 de marzo de 2004, 11:07
 */

package utilesGUI.tabla;

import utilesGUI.tiposTextos.ITipoTexto;
import utilesGUI.tiposTextos.JTipoTextoEstandar;

/**Propiedades de las columnas de la tabla*/
public class JFormProp extends java.awt.Dialog implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener {
    JTabla moTabla;
    /**
     * Creates new form JFormProp
     * @param parent padre
     * @param modal modal
     * @param poTabla tabla de la que sacar las propiedades
     */
    public JFormProp(java.awt.Frame parent, boolean modal, JTabla poTabla) {
        super(parent, modal);
        initComponents();
        moTabla = poTabla;
        refrescar();
        btnAceptar.addActionListener(this);
        btnBajar.addActionListener(this);
        btnSubir.addActionListener(this);
        btnEstablecerAncho.addActionListener(this);
        txtAncho.setTipo(JTipoTextoEstandar.mclTextNumeroDoble);
        listCZ1.addItemListener(this);
    }
    private void refrescar(){
        listCZ1.removeAll();
        for(int i = 0; i<moTabla.getCols();i++){
            listCZ1.add(moTabla.getTabla().getColumnName(moTabla.malPosiCols[i]));
        }
        this.validate();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        listCZ1 = new utilesGUI.ListCZ();
        label1 = new java.awt.Label();
        txtAncho = new utilesGUI.TextFieldCZ();
        btnEstablecerAncho = new utilesGUI.ButtonCZ();
        btnAceptar = new utilesGUI.ButtonCZ();
        btnSubir = new utilesGUI.ButtonCZ();
        btnBajar = new utilesGUI.ButtonCZ();

        setLayout(new java.awt.GridBagLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(listCZ1, gridBagConstraints);

        label1.setText("Ancho");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(label1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        add(txtAncho, gridBagConstraints);

        btnEstablecerAncho.setLabel("Establecer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        add(btnEstablecerAncho, gridBagConstraints);

        btnAceptar.setLabel("Aceptar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        add(btnAceptar, gridBagConstraints);

        btnSubir.setLabel("Subir");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        add(btnSubir, gridBagConstraints);

        btnBajar.setLabel("Bajar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(btnBajar, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }//GEN-END:initComponents
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    public void actionPerformed(java.awt.event.ActionEvent e) {
        if(e.getSource()==btnAceptar){
            closeDialog(null);
        }
        if(e.getSource()==btnBajar){
            int lPosi = listCZ1.getSelectedIndex()+1;
            if(lPosi<listCZ1.getItemCount()){
                moTabla.intercambiarCol(listCZ1.getSelectedIndex(), lPosi);
                refrescar();
                listCZ1.select(lPosi);
            }
        }
        if(e.getSource()==btnSubir){
            int lPosi = listCZ1.getSelectedIndex()-1;
            if(lPosi>=0){
                moTabla.intercambiarCol(listCZ1.getSelectedIndex(), lPosi);
                refrescar();
                listCZ1.select(lPosi);
            }
        }
        if(e.getSource()==btnEstablecerAncho){
            if(txtAncho.isTipoCorrecto()){
                moTabla.setAncho(
                    listCZ1.getSelectedIndex(), 
                    Double.valueOf(txtAncho.getText()).doubleValue()
                );
            }
        }
        
    }    
    
    public void focusGained(java.awt.event.FocusEvent e) {
        //vacio
    }    

    public void focusLost(java.awt.event.FocusEvent e) {
        //vacio
    }
    
    public void itemStateChanged(java.awt.event.ItemEvent e) {
        if(e.getSource() == listCZ1){
            txtAncho.setText(Double.toString(moTabla.getAncho(listCZ1.getSelectedIndex())));
            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUI.ButtonCZ btnAceptar;
    private utilesGUI.ButtonCZ btnBajar;
    private utilesGUI.ButtonCZ btnEstablecerAncho;
    private utilesGUI.ButtonCZ btnSubir;
    private java.awt.Label label1;
    private utilesGUI.ListCZ listCZ1;
    private utilesGUI.TextFieldCZ txtAncho;
    // End of variables declaration//GEN-END:variables
    
}
