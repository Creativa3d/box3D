/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelCargaMasiva.java
 *
 * Created on 20-sep-2010, 17:36:05
 */

package utilesGUIx.cargaMasiva;

import ListDatos.JListDatos;
import ListDatos.JServerServidorDatos;
import ListDatos.JServerServidorDatosFichero;
import ListDatos.JUtilTabla;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import utiles.Copiar;
import utiles.JArchivo;
import utilesGUIx.ActionListenerCZ;
import utilesGUIx.JGUIxConfigGlobal;
import utilesGUIx.controlProcesos.JProcesoAccionAbstracX;
import utilesGUIx.msgbox.JMsgBox;


public class JPanelCargaMasiva extends javax.swing.JPanel {
    private static final long serialVersionUID = 1L;
    private JListDatos moList;
    private ActionListenerCZ moAccionTerminada;

    /** Creates new form JPanelCargaMasiva */
    public JPanelCargaMasiva() {
        initComponents();
    }
    public void setAccionListenerTerminada(ActionListenerCZ poAccion){
        moAccionTerminada=poAccion;
    }
    public void setDatos(JListDatos poList){
        moList=poList;
        StringBuilder lasEstruc = new StringBuilder(moList.size()* 20);
        lasEstruc.append("<html>");
        lasEstruc.append("Campos separados por <strong>tabulador</strong> y filas separadas con <strong>enter</strong> y sin el nombre de las columnas");
        lasEstruc.append("<br>");
        for(int i = 0 ; i < moList.getFields().size(); i++){
            lasEstruc.append("Nombre: ");
            lasEstruc.append("<strong>");
            lasEstruc.append(moList.getFields(i).getNombre());
            lasEstruc.append("</strong>");
            lasEstruc.append("(");
            lasEstruc.append("<strong>");
            switch(moList.getFields(i).getTipo()){
                case JListDatos.mclTipoBoolean:
                    lasEstruc.append("0/1");
                    break;
                case JListDatos.mclTipoFecha:
                    lasEstruc.append("Fecha");
                    break;
                case JListDatos.mclTipoNumero:
                    lasEstruc.append("Número entero");
                    break;
                case JListDatos.mclTipoNumeroDoble:
                case JListDatos.mclTipoMoneda3Decimales:
                case JListDatos.mclTipoMoneda:
                case JListDatos.mclTipoPorcentual3Decimales:
                case JListDatos.mclTipoPorcentual:
                    lasEstruc.append("Número decimal");
                    break;
                default:
                    lasEstruc.append("Cadena(" + String.valueOf(moList.getFields(i).getTamano()) + ")");
            }
            lasEstruc.append("</strong>");
            lasEstruc.append(")");
            lasEstruc.append("; ");
        }

        lasEstruc.append("</html>");
        lblEstructura.setText(lasEstruc.toString() );

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        lblEstructura = new javax.swing.JLabel();
        btnCopiarColumas = new utilesGUIx.JButtonCZ();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnImportar = new utilesGUIx.JButtonCZ();
        chkEditar = new utilesGUIx.JCheckBoxCZ();
        btnSalir = new utilesGUIx.JButtonCZ();
        btnExportar = new utilesGUIx.JButtonCZ();
        btnLeerFichero = new utilesGUIx.JButtonCZ();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        lblEstructura.setText("jLabel1");
        lblEstructura.setPreferredSize(new java.awt.Dimension(51, 150));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(lblEstructura, gridBagConstraints);

        btnCopiarColumas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Copy16.gif"))); // NOI18N
        btnCopiarColumas.setText("Copiar");
        btnCopiarColumas.setToolTipText("Copia la cabezera para poder pegarala en un excel (por ejemplo)");
        btnCopiarColumas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarColumasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        jPanel2.add(btnCopiarColumas, gridBagConstraints);

        jSplitPane1.setTopComponent(jPanel2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jSplitPane1.setRightComponent(jScrollPane1);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);

        btnImportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Import16.gif"))); // NOI18N
        btnImportar.setText("Importar a base datos");
        btnImportar.setToolTipText("Proceso que importa lo que hay en la pantalla a la base datos");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });
        jPanel1.add(btnImportar);

        chkEditar.setText("Editar si existe");
        chkEditar.setToolTipText("Si ya existe el registro, lo edita con la información de la pantalla");
        jPanel1.add(chkEditar);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Stop16.gif"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir);

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Export16.gif"))); // NOI18N
        btnExportar.setText("Exportar tabla a fichero");
        btnExportar.setToolTipText("Lee de la base datos la tabla y la guarda en el fichero indicado");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jPanel1.add(btnExportar);

        btnLeerFichero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Open16.gif"))); // NOI18N
        btnLeerFichero.setText("Leer fichero a pantalla");
        btnLeerFichero.setToolTipText("Lee un fichero y lo carga en la pantalla");
        btnLeerFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerFicheroActionPerformed(evt);
            }
        });
        jPanel1.add(btnLeerFichero);

        add(jPanel1, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        
        try{
            JCargaMasiva loCaega = new JCargaMasiva(moList, jTextArea1.getText(), chkEditar.isSelected());
            loCaega.setAccionListenerTerminada(moAccionTerminada);
            JGUIxConfigGlobal.getInstancia().getPlugInFactoria().getPlugInContexto().getThreadGroup().addProcesoYEjecutar(loCaega);
        }catch(Throwable e){
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, e);
        }

    }//GEN-LAST:event_btnImportarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        
        JGUIxConfigGlobal.getInstancia().getMostrarPantalla().cerrarForm(this);

    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLeerFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerFicheroActionPerformed
        JFileChooser loFile = new JFileChooser();
        if(loFile.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            try {
                jTextArea1.setText(
                        new String(
                                JArchivo.getArchivoEnBytes(loFile.getSelectedFile().getAbsolutePath())
                                , "ISO-8859-1"
                        ));
            } catch (Exception ex) {
                JMsgBox.mensajeErrorYLog(this, ex);
            }
        }
    }//GEN-LAST:event_btnLeerFicheroActionPerformed

    private void btnCopiarColumasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarColumasActionPerformed
        StringBuilder lasEstruc = new StringBuilder(moList.size()* 20);
        for(int i = 0 ; i < moList.getFields().size(); i++){
            lasEstruc.append(moList.getFields(i).getNombre());
            lasEstruc.append("(");
            switch(moList.getFields(i).getTipo()){
                case JListDatos.mclTipoBoolean:
                    lasEstruc.append("0/1");
                    break;
                case JListDatos.mclTipoFecha:
                    lasEstruc.append("Fecha");
                    break;
                case JListDatos.mclTipoNumero:
                    lasEstruc.append("Número entero");
                    break;
                case JListDatos.mclTipoNumeroDoble:
                case JListDatos.mclTipoMoneda3Decimales:
                case JListDatos.mclTipoMoneda:
                case JListDatos.mclTipoPorcentual3Decimales:
                case JListDatos.mclTipoPorcentual:
                    lasEstruc.append("Número decimal");
                    break;
                default:
                    lasEstruc.append("Cadena(" + String.valueOf(moList.getFields(i).getTamano()) + ")");
            }
            lasEstruc.append(")");
            lasEstruc.append("\t");
        }
        
        Copiar.getInstance().setClip(lasEstruc.toString());
        
    }//GEN-LAST:event_btnCopiarColumasActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        try {
            
            JFileChooser loFicheChoo = new JFileChooser();
            if(loFicheChoo.showSaveDialog(this)==JFileChooser.APPROVE_OPTION){
                final File loFile = loFicheChoo.getSelectedFile();
                
            JGUIxConfigGlobal.getInstancia().getPlugInFactoria().getPlugInContexto().getThreadGroup().addProcesoYEjecutar(
                    new JProcesoAccionAbstracX() {
                    public String getTitulo() {
                        return "Proceso exportación";
                    }

                    public int getNumeroRegistros() {
                        return -1;
                    }

                    public void procesar() throws Throwable {
                        JListDatos loList = JUtilTabla.clonarFilasListDatos(moList, false);
                        loList.recuperarDatosNoCacheNormal(loList.getSelect());
                        loList.msTabla = loFile.getName();

                        JServerServidorDatosFichero loServer = new JServerServidorDatosFichero(loFile.getParentFile().getAbsolutePath(), '\t', true);
                        loServer.guardar(loList);

                    }

                    public void mostrarMensaje(String psMensaje) {
                        JMsgBox.mensajeInformacion(null, "Proceso exportación terminado");
                    }
                }
            );
                
                
            }
            
        } catch (Exception ex) {
            JMsgBox.mensajeErrorYLog(this, ex);
        }
        
    }//GEN-LAST:event_btnExportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUIx.JButtonCZ btnCopiarColumas;
    private utilesGUIx.JButtonCZ btnExportar;
    private utilesGUIx.JButtonCZ btnImportar;
    private utilesGUIx.JButtonCZ btnLeerFichero;
    private utilesGUIx.JButtonCZ btnSalir;
    private utilesGUIx.JCheckBoxCZ chkEditar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblEstructura;
    // End of variables declaration//GEN-END:variables

}
