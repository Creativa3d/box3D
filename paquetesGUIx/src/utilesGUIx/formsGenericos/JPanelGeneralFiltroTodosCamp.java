/*
 * JPanelGeneralFiltroTodosCamp.java
 *
 * Created on 17 de febrero de 2008, 9:29
 */

package utilesGUIx.formsGenericos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import utiles.JDepuracion;
import utilesGUIx.JTableCZ;

public class JPanelGeneralFiltroTodosCamp extends javax.swing.JPanel implements KeyListener, DocumentListener, FocusListener {
    private JPanelGeneralFiltroModelo moFiltro;
    private JTable jTableDatos;
    private ActionListener moPadre;
    private JScrollPane moScroll;
    private boolean mbInicializado=false;
    
    /** Creates new form JPanelGeneralFiltroTodosCamp */
    public JPanelGeneralFiltroTodosCamp() {
        initComponents();
        txtBusqueda.getDocument().addDocumentListener(this);
        txtBusqueda.addKeyListener(this);
    }
    
    public void setComponentes(
            final JTable poTableDatos,
            final JScrollPane poScroll, 
            final ActionListener poPadre
            ){
        moPadre = poPadre;
        moScroll = poScroll;
        jTableDatos = poTableDatos;
        jTableDatos.addKeyListener(this);
        
    }
    
    public void setDatos(
            final JPanelGeneralFiltroModelo loFiltro){
        moFiltro = loFiltro;
        mbInicializado=true;
    }
    public void requestFocus(){
//        super.requestFocus();
        txtBusqueda.requestFocus();
    }

    public boolean requestFocusInWindow() {
//        super.requestFocusInWindow();
        return txtBusqueda.requestFocusInWindow();
    }
    
    public void changedUpdate(DocumentEvent e) {
        if(mbInicializado){
            changed();
        }
    }

    public void insertUpdate(DocumentEvent e) {
        if(mbInicializado){
            changed();
        }
    }
    

    public void removeUpdate(DocumentEvent e) {
        if(mbInicializado){
            changed();
        }
    }
    private void changed(){
        moFiltro.buscarTodosCampos(txtBusqueda.getText());     
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtBusqueda = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        txtBusqueda.setToolTipText("<html>El texto escrito aquí lo busca en cada campo de la tabla</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(txtBusqueda, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    public void focusGained(FocusEvent e) {
        if(mbInicializado){
        }
    }

    public void focusLost(FocusEvent e) {
        if(mbInicializado){
        }
    }

    public void keyPressed(KeyEvent e) {
        if(mbInicializado){
            if(e.getSource() == txtBusqueda && isVisible()){
                if (e.getKeyCode() == KeyEvent.VK_ENTER){
                    ActionEvent loEvent = new ActionEvent(jTableDatos, 0, JTableCZ.mcsENTER);
                    moPadre.actionPerformed(loEvent);
                }
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE){
                    ActionEvent loEvent = new ActionEvent(jTableDatos, 0, JTableCZ.mcsESC);
                    moPadre.actionPerformed(loEvent);
                }
                if (e.getKeyCode() == KeyEvent.VK_DOWN || e.getKeyCode() == KeyEvent.VK_UP ||
                    e.getKeyCode() == KeyEvent.VK_PAGE_DOWN || e.getKeyCode() == KeyEvent.VK_PAGE_UP){
                    int lRow = jTableDatos.getSelectedRow();
                    switch(e.getKeyCode()){
                        case KeyEvent.VK_DOWN:
                        lRow++;
                        break;
                        case KeyEvent.VK_UP:
                        lRow--;
                        break;
                        case KeyEvent.VK_PAGE_DOWN:
                        lRow+=10;
                        break;
                        case KeyEvent.VK_PAGE_UP:
                        lRow-=10;
                        break;
                    }
                    if(lRow < 0 ){
                        lRow=0;
                    }
                    if(lRow>=jTableDatos.getRowCount()){
                        lRow = jTableDatos.getRowCount()-1;
                    }
                    jTableDatos.getSelectionModel().setSelectionInterval(lRow, lRow);

                    int lMAx = moScroll.getVerticalScrollBar().getModel().getMaximum();
                    moScroll.getVerticalScrollBar().getModel().setValue(
                            (lMAx / jTableDatos.getRowCount()) * (lRow)
                            );

                }
            }

            if(e.getSource() == jTableDatos && isVisible()){
                String lsValor=null;
                if(
                   (e.getKeyChar() >= 'a' &&  e.getKeyChar() <= 'z') ||
                   (e.getKeyChar() >= 'A' &&  e.getKeyChar() <= 'Z') ||
                   (e.getKeyChar() >= '0' &&  e.getKeyChar() <= '9') ||
                   e.getKeyChar() == '/' ||  e.getKeyChar() == '\\' ||
                   e.getKeyChar() == ',' ||  e.getKeyChar() == '.' ||
                   e.getKeyChar() == '-' ||  e.getKeyChar() == '_' ||
                   e.getKeyChar() == ';'  ||  e.getKeyChar() == ':'    
                ){
                    lsValor =String.valueOf(e.getKeyChar());
                }else{
                    if(
                       e.getKeyChar() == KeyEvent.VK_BACK_SPACE ||  e.getKeyChar() == KeyEvent.VK_DELETE
                    ){
                        lsValor ="";
                    }
                }

                if(lsValor !=null){
                    txtBusqueda.setText(lsValor);
                    txtBusqueda.requestFocus();
                }
            }
        }
        
    }

    public void keyReleased(KeyEvent e) {
        if(mbInicializado){
            
        }
    }

    public void keyTyped(KeyEvent e) {
        if(mbInicializado){
            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables



    
}
