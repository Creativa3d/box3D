/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFormMensaje.java
 *
 * Created on 18-ago-2009, 18:50:23
 */
package utilesGUIx.msgbox;

import ListDatos.JUtilTabla;
import java.awt.Frame;
import javax.swing.JPanel;
import utiles.Copiar;
import utiles.IListaElementos;
import utiles.JCopiarObjetos;
import utiles.JDepuracion;

public class JFormMensaje extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;
    private String msMensaje = "";
    private String msTitulo = "";
    private Thread moThread;
    private boolean mbFin = false;
    private Thread moThread2;
    private String msDetalles;
    private Copiar moCopiar;

    /**
     * Creates new form JFormMensaje
     */
    public JFormMensaje(Frame poPadre, boolean pbModal, String psTexto, String psDetalles) {
        super(poPadre, pbModal);
        initComponents();
        setMensaje(psTexto);
        msDetalles = psDetalles;
        btnDetalles.setVisible(psDetalles != null && !psDetalles.equals(""));
    }

    public JFormMensaje(Frame poPadre, boolean pbModal, String psTexto) {
        this(poPadre, pbModal, psTexto, null);
    }

    public void cerrarA(final int plSegundos) {
        moThread2 = new Thread(new Runnable() {
            public void run() {
                int lSegundosT = plSegundos;
                while (!mbFin && lSegundosT > 0) {
                    lSegundosT--;
                    synchronized(this){
                        try {
                            wait(1000);
                        } catch (InterruptedException ex) {
                        }
                    }
                }
                if (!mbFin) {
                    JFormMensaje.this.dispose();
                }
                mbFin = true;
            }
        });
        moThread2.start();
    }

    public void setMostrarCada(final int plSegundos, final int plHasta) {
        moThread = new Thread(new Runnable() {
            public void run() {
                int lSegundosT = 0;
                while (!mbFin && lSegundosT < plHasta) {
                    lSegundosT += plSegundos;
                    setVisible(true);
                    synchronized(this){
                        try {
                            wait(plSegundos * 1000);
                        } catch (InterruptedException ex) {
                        }
                    }
                }
            }
        });
        moThread.start();
    }

    public String getTitulo() {
        return msTitulo;
    }

    public String getMensaje() {
        return msMensaje;
    }

    public String getMensajeHTML() {
        return jLabel1.getText();
    }

    public void setMensajeHTML(String psTexto) {
        jLabel1.setText(psTexto);
    }

    public void setMensaje(String psTexto) {
        msMensaje = psTexto;
        mostrarMensaje();
    }

    private void mostrarMensaje() {
        if (msMensaje.indexOf("<html>") >= 0) {
            jLabel1.setText(msMensaje);
        } else {
            jLabel1.setText("<html>" + msMensaje.replaceAll("\n", "<br>") + "</html>");
        }
    }
    
    public synchronized void setTituloInfo(String psTituloInfo) {
        msTitulo = psTituloInfo;
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
                psTituloInfo,
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Dialog", 1, 12)));
    }
    
    public synchronized void mostrarErrores(IListaElementos poErrores) {
        
        for (int i = 0; i < poErrores.size(); i++) {
            addErrorSinMostrar((String) poErrores.get(i));
        }
        mostrarMensaje();
    }
    
    public synchronized void addErrorSinMostrar(String psError) {
        msMensaje = msMensaje + psError + "<br>";
    }

    public synchronized void addError(String psError) {
        addErrorSinMostrar(psError);
        mostrarMensaje();
    }

    public JPanel getPanelBotonera() {
        return jPanel1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        btnAceptar = new utilesGUIx.JButtonCZ();
        btnDetalles = new utilesGUIx.JButtonCZ();
        btnCopiar = new utilesGUIx.JButtonCZ();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/accept.gif"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(btnAceptar, gridBagConstraints);

        btnDetalles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/ColumnInsertBefore16.gif"))); // NOI18N
        btnDetalles.setToolTipText("Detalles");
        btnDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallesActionPerformed(evt);
            }
        });
        jPanel1.add(btnDetalles, new java.awt.GridBagConstraints());

        btnCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilesGUIx/images/Copy16.gif"))); // NOI18N
        btnCopiar.setToolTipText("Copiar");
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCopiar, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Información"));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setOpaque(true);
        jScrollPane1.setViewportView(jLabel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-640)/2, (screenSize.height-430)/2, 640, 430);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        dispose();
        mbFin = true;
    }//GEN-LAST:event_btnAceptarActionPerformed
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        mbFin = true;
    }//GEN-LAST:event_formWindowClosing
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        mbFin = true;
    }//GEN-LAST:event_formWindowClosed
    
    private void btnDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetallesActionPerformed
        try{
            JMsgBox.mensajeError(this, msDetalles);
        }catch(Throwable e){
            JDepuracion.anadirTexto(getClass().getName(), e);
        }
    }//GEN-LAST:event_btnDetallesActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        moCopiar = new Copiar();
        moCopiar.setClip(jLabel1.getText());
    }//GEN-LAST:event_btnCopiarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utilesGUIx.JButtonCZ btnAceptar;
    private utilesGUIx.JButtonCZ btnCopiar;
    private utilesGUIx.JButtonCZ btnDetalles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
