/*
 * JPanelURL.java
 *
 * Created on 5 de noviembre de 2007, 17:29
 */

package utilesGUIxSeguridad;

import java.security.cert.X509Certificate;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;


public class JPanelCertificados extends JPanel {
    private ICertificados moCertificados;
        
    /** Creates new form JPanelURL */
    public JPanelCertificados() {
        initComponents();
        jPasswordField1.setVisible(false);
        lblContrasena.setVisible(false);
    }

    public void setDatos(ICertificados poCertificados) throws Exception{
        moCertificados=poCertificados;
        rellenarListaCertificados();
        if(moCertificados.getAlias()!=null){
            txtCERTIFICADO.setText(moCertificados.getAlias());
        }
        if(moCertificados.getPassword()!=null){
            jPasswordField1.setText(moCertificados.getPassword());
        }
    }

    public void rellenarListaCertificados() throws Exception{

            DefaultMutableTreeNode root = new DefaultMutableTreeNode("Lista de certificados");

            X509Certificate xcert;
            Vector loVector = moCertificados.getListaCertificados();

            for (int i = 0 ; i < loVector.size(); i++) {
                    xcert = (X509Certificate) loVector.get(i);

                    root.add(new DefaultMutableTreeNode(xcert));

            }

            jTreeCertificados = new JTree(root);

            jTreeCertificados.addTreeSelectionListener(new TreeSelectionListener() {
                public void valueChanged(TreeSelectionEvent e) {
                    jTreeCertificadosValueChanged(e);
                }
            });

            jTreeCertificados.expandRow(1);
            jScrollPane1.setViewportView(jTreeCertificados);
            jScrollPane1.repaint();
    }
    public void establecerDatos() throws Exception {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) jTreeCertificados.getLastSelectedPathComponent();

        if(node!=null && (node.getUserObject() instanceof X509Certificate)){
            moCertificados.setX509Certificate((X509Certificate) node.getUserObject());
            moCertificados.setPassword(jPasswordField1.getText());
        }else{
            throw new Exception("No hay un certificado seleccionado ");
        }
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeCertificados = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        txtCERTIFICADO = new javax.swing.JTextField();
        lblContrasena = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Certificados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11))); // NOI18N
        jPanel1.setMinimumSize(new java.awt.Dimension(281, 260));
        jPanel1.setPreferredSize(new java.awt.Dimension(281, 260));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTreeCertificados.setFont(new java.awt.Font("Dialog", 0, 11));
        jTreeCertificados.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeCertificadosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTreeCertificados);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel1.setText("Seleccione el certificado que quiere utilizar de la lista:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(txtCERTIFICADO, gridBagConstraints);

        lblContrasena.setText("Contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel1.add(lblContrasena, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel1.add(jPasswordField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeCertificadosValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeCertificadosValueChanged
        try{	
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) jTreeCertificados.getLastSelectedPathComponent();

        if(node!=null && (node.getUserObject() instanceof X509Certificate)){
                txtCERTIFICADO.setText(
                        moCertificados.getCertificateAlias(((X509Certificate) node.getUserObject()))
                        );

        }
        }catch (Exception exc){
        }
                        
    }//GEN-LAST:event_jTreeCertificadosValueChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTreeCertificados;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JTextField txtCERTIFICADO;
    // End of variables declaration//GEN-END:variables

   
    
}
