/*
 * JPanelDiferenciasBD.java
 *
 * Created on 11 de agosto de 2005, 14:22
 */

package visualizarDiferenciasBD;

import ListDatos.IServerServidorDatos;
import ListDatos.JServerServidorDatos;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.AbstractTableModel;
import main.JDatosGeneralesP;
import utiles.*;
import utilesBD.comparadorBD.*;
import utilesBD.pasarDatos.JPasarDatos;
import utilesBD.serverTrozos.IServerServidorDatosTrozos;
import utilesBD.serverTrozos.JServerTrozosUtil;

import utilesGUI.tabla.*;
import utilesGUIx.configForm.JConexion;
import utilesGUIx.configForm.JConexionIO;
import utilesGUIx.configForm.JPanelConexionesEDICION;
import utilesGUIx.configForm.JT2CONEXIONES;
import utilesGUIx.formsGenericos.CallBack;
import utilesGUIx.formsGenericos.JMostrarPantalla;
import utilesGUIx.formsGenericos.JMostrarPantallaParam;
import utilesGUIx.formsGenericos.edicion.IFormEdicion;

public class JPanelDiferenciasBD extends javax.swing.JPanel {
    private final JConexion moConex1 = new JConexion();
    private final JConexion moConex2 = new JConexion();

    
    private JTableModelDiferencias moTablaModelTablas;
    private JTableModelDiferencias moTablaModelCampos;
    private JTableModelDiferencias moTablaModelRelaciones;
    private JTableModelDiferencias moTablaModelIndices;
    
    /** Creates new form JPanelDiferenciasBD */
    public JPanelDiferenciasBD() {
        initComponents();
        
    }

//    private Connection getConexionBD(JConexion poConex) throws Exception{
//        Class.forName(poConex.msClase);
//        Connection loConex = DriverManager.getConnection(poConex.msURL, poConex.msUSUARIO, poConex.msPASSWORD);
//        return loConex;
//    }
    public IServerServidorDatosTrozos getServerTrozos(JConexion poConex) throws Throwable{
        IServerServidorDatos loServerO = JT2CONEXIONES.getServer(poConex);
        return JServerTrozosUtil.getServerTrozos(loServerO);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnConexion1 = new javax.swing.JButton();
        btnConexion2 = new javax.swing.JButton();
        lblConexion1 = new javax.swing.JLabel();
        lblConexion2 = new javax.swing.JLabel();
        btnEjecutar = new javax.swing.JButton();
        btnEjecutar1 = new javax.swing.JButton();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanelTablas = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnIgualarTablas = new javax.swing.JButton();
        btnIgualarTablasTODO = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTablas = new utilesGUIx.JTableCZ();
        jPanelCampos = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnIgualarCampos = new javax.swing.JButton();
        btnIgualarCamposTODOS = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCampos = new utilesGUIx.JTableCZ();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanelIndices = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnIgualarIndices = new javax.swing.JButton();
        btnIgualarIndicesTODO = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableIndices = new utilesGUIx.JTableCZ();
        jPanelRelaciones = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnIgualarRelaciones = new javax.swing.JButton();
        btnIgualarRelacionesTODO = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableRelaciones = new utilesGUIx.JTableCZ();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 2));

        jLabel3.setText("Base de datos 1");
        jPanel1.add(jLabel3);

        jLabel4.setText("Base de datos 2");
        jPanel1.add(jLabel4);

        btnConexion1.setText("Conexión ");
        btnConexion1.setMinimumSize(new java.awt.Dimension(100, 25));
        btnConexion1.setPreferredSize(new java.awt.Dimension(100, 25));
        btnConexion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConexion1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnConexion1);

        btnConexion2.setText("Conexión ");
        btnConexion2.setMinimumSize(new java.awt.Dimension(100, 25));
        btnConexion2.setPreferredSize(new java.awt.Dimension(100, 25));
        btnConexion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConexion2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnConexion2);

        lblConexion1.setBackground(javax.swing.UIManager.getDefaults().getColor("OptionPane.warningDialog.titlePane.background"));
        lblConexion1.setForeground(javax.swing.UIManager.getDefaults().getColor("OptionPane.warningDialog.titlePane.foreground"));
        lblConexion1.setText("sin conexión");
        jPanel1.add(lblConexion1);

        lblConexion2.setBackground(javax.swing.UIManager.getDefaults().getColor("OptionPane.warningDialog.titlePane.background"));
        lblConexion2.setForeground(javax.swing.UIManager.getDefaults().getColor("OptionPane.warningDialog.titlePane.foreground"));
        lblConexion2.setText("sin conexión");
        jPanel1.add(lblConexion2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints);

        btnEjecutar.setText("Ver diferencias estruct.");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(btnEjecutar, gridBagConstraints);

        btnEjecutar1.setText("Pasar datos");
        btnEjecutar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        add(btnEjecutar1, gridBagConstraints);

        jSplitPane3.setDividerLocation(175);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jSplitPane1.setDividerLocation(75);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanelTablas.setBorder(javax.swing.BorderFactory.createTitledBorder("Tablas"));
        jPanelTablas.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        btnIgualarTablas.setText("Igualar");
        btnIgualarTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarTablasActionPerformed(evt);
            }
        });
        jPanel2.add(btnIgualarTablas);

        btnIgualarTablasTODO.setText("Igualar TODO");
        btnIgualarTablasTODO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarTablasTODOActionPerformed(evt);
            }
        });
        jPanel2.add(btnIgualarTablasTODO);

        jPanelTablas.add(jPanel2, java.awt.BorderLayout.WEST);

        jTableTablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableTablas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableTablasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTablas);

        jPanelTablas.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setTopComponent(jPanelTablas);

        jPanelCampos.setBorder(javax.swing.BorderFactory.createTitledBorder("Campos"));
        jPanelCampos.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        btnIgualarCampos.setText("Igualar");
        btnIgualarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarCamposActionPerformed(evt);
            }
        });
        jPanel5.add(btnIgualarCampos);

        btnIgualarCamposTODOS.setText("Igualar TODO");
        btnIgualarCamposTODOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarCamposTODOSActionPerformed(evt);
            }
        });
        jPanel5.add(btnIgualarCamposTODOS);

        jPanelCampos.add(jPanel5, java.awt.BorderLayout.WEST);

        jTableCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableCamposMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCampos);

        jPanelCampos.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setBottomComponent(jPanelCampos);

        jSplitPane3.setLeftComponent(jSplitPane1);

        jSplitPane2.setDividerLocation(75);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanelIndices.setBorder(javax.swing.BorderFactory.createTitledBorder("Indices"));
        jPanelIndices.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        btnIgualarIndices.setText("Igualar");
        btnIgualarIndices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarIndicesActionPerformed(evt);
            }
        });
        jPanel3.add(btnIgualarIndices);

        btnIgualarIndicesTODO.setText("Igualar TODO");
        btnIgualarIndicesTODO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarIndicesTODOActionPerformed(evt);
            }
        });
        jPanel3.add(btnIgualarIndicesTODO);

        jPanelIndices.add(jPanel3, java.awt.BorderLayout.WEST);

        jTableIndices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableIndices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableIndicesMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableIndices);

        jPanelIndices.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jSplitPane2.setLeftComponent(jPanelIndices);

        jPanelRelaciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Relaciones"));
        jPanelRelaciones.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        btnIgualarRelaciones.setText("Igualar");
        btnIgualarRelaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarRelacionesActionPerformed(evt);
            }
        });
        jPanel4.add(btnIgualarRelaciones);

        btnIgualarRelacionesTODO.setText("Igualar TODO");
        btnIgualarRelacionesTODO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualarRelacionesTODOActionPerformed(evt);
            }
        });
        jPanel4.add(btnIgualarRelacionesTODO);

        jPanelRelaciones.add(jPanel4, java.awt.BorderLayout.WEST);

        jTableRelaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRelaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableRelacionesMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableRelaciones);

        jPanelRelaciones.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jSplitPane2.setRightComponent(jPanelRelaciones);

        jSplitPane3.setRightComponent(jSplitPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jSplitPane3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEjecutar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutar1ActionPerformed
        try{

            IServerServidorDatosTrozos loServer1 = getServerTrozos(moConex1);
            IServerServidorDatos loServer2 = JT2CONEXIONES.getServer(moConex2);
            
            JPasarDatos loPAsar = new JPasarDatos(
                    loServer1.getTableDefs(), loServer2.getTableDefs(),
                    loServer1, loServer2);
            
            JPanelPasarDatos loFormPasar = new JPanelPasarDatos(loPAsar);
            JDatosGeneralesP.getDatosGenerales().mostrarForm(
                    new JMostrarPantallaParam(loFormPasar, 800, 600, JMostrarPantalla.mclEdicionFrame, "Pasar datos"));
            
        }catch(Throwable e){
            e.printStackTrace();
            utilesGUIx.msgbox.JMsgBox.mensajeError(this,e.toString());
        }

    }//GEN-LAST:event_btnEjecutar1ActionPerformed

    private void jTableRelacionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRelacionesMousePressed
        try{
            if(evt.getClickCount()==2){
                if(jTableRelaciones.getSelectedRow()>=0){
                    ((IDiferencia)moTablaModelRelaciones.moLista.get(jTableRelaciones.getSelectedRow())).arreglarDiferencia();
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "realizado");
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, e.toString());
        }

    }//GEN-LAST:event_jTableRelacionesMousePressed

    private void jTableIndicesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableIndicesMousePressed
        try{
            if(evt.getClickCount()==2){
                if(jTableIndices.getSelectedRow()>=0){
                    ((IDiferencia)moTablaModelIndices.moLista.get(jTableIndices.getSelectedRow())).arreglarDiferencia();
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "realizado");
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, e.toString());
        }

    }//GEN-LAST:event_jTableIndicesMousePressed

    private void jTableCamposMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCamposMousePressed

        try{
            if(evt.getClickCount()==2){
                if(jTableCampos.getSelectedRow()>=0){
                    ((IDiferencia)moTablaModelCampos.moLista.get(jTableCampos.getSelectedRow())).arreglarDiferencia();
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "realizado");
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, e.toString());
        }

        
    }//GEN-LAST:event_jTableCamposMousePressed

    private void jTableTablasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTablasMousePressed
        try{
            if(evt.getClickCount()==2){
                if(jTableTablas.getSelectedRow()>=0){
                    ((IDiferencia)moTablaModelTablas.moLista.get(jTableTablas.getSelectedRow())).arreglarDiferencia();
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "realizado");
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, e.toString());
        }
    }//GEN-LAST:event_jTableTablasMousePressed

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed
        try{
            IServerServidorDatos loServer1 = JT2CONEXIONES.getServer(moConex1);
            IServerServidorDatos loServer2 = JT2CONEXIONES.getServer(moConex2);
            
            JComparadorBD loCom = new JComparadorBD(
                    loServer1.getTableDefs(), loServer2.getTableDefs(),
                    loServer1, loServer2);

            loCom.ejecutar();
            
            IListaElementos loLista = loCom.getDiferencias();
            
            
            moTablaModelTablas = new JTableModelDiferencias(IDiferencia.mclTabla, loLista);
            moTablaModelCampos = new JTableModelDiferencias(IDiferencia.mclCampo, loLista);
            moTablaModelRelaciones = new JTableModelDiferencias(IDiferencia.mclRelacion, loLista);
            moTablaModelIndices = new JTableModelDiferencias(IDiferencia.mclIndice, loLista);
            
            jTableCampos.setModel(moTablaModelCampos);
            jTableIndices.setModel(moTablaModelIndices);
            jTableRelaciones.setModel(moTablaModelRelaciones);
            jTableTablas.setModel(moTablaModelTablas);
            
        }catch(Throwable e){
            JDepuracion.anadirTexto(getClass().getName(), e);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this,e.toString());
        }
        
    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void btnConexion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConexion2ActionPerformed
        try {
            final JConexionIO loIO = new JConexionIO();
            loIO.setLector(JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML());
            loIO.setPrefijo("ComparadorConex2");
            loIO.leerPropiedades(moConex2);
            moConex2.leerConfig();
            
            JPanelConexionesEDICION loConex = new JPanelConexionesEDICION();
            loConex.setDatos(moConex2, null);
            
            JMostrarPantallaParam loParam = new JMostrarPantallaParam((IFormEdicion)loConex, JMostrarPantalla.mclEdicionFrame);
            loParam.setCallBack(new CallBack() {
                @Override
                public void callBack(Object poControlador) {
                    try {
                        if(moConex2.getConexion().getTipoConexion()!=JServerServidorDatos.mclTipoBD){
                            moConex2.getConexion().setUSUARIO(JOptionPane.showInputDialog("Usuario", moConex2.getConexion().getUSUARIO()));
                            moConex2.getConexion().setPASSWORD(JOptionPane.showInputDialog("Password", moConex2.getConexion().getPASSWORD()));
                        }
                        lblConexion2.setText(moConex2.getConexion().getURL());
                        loIO.guardarPropiedades(moConex2);
                        JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML().guardarFichero();
                    } catch (Exception ex) {
                        JDepuracion.anadirTexto(getClass().getName(), ex);
                        utilesGUIx.msgbox.JMsgBox.mensajeError(JPanelDiferenciasBD.this, ex);
                    }
                }
            });
            JDatosGeneralesP.getDatosGenerales().mostrarForm(loParam);
            
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }
    }//GEN-LAST:event_btnConexion2ActionPerformed

    private void btnConexion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConexion1ActionPerformed
        try {
            final JConexionIO loIO = new JConexionIO();
            loIO.setLector(JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML());
            loIO.setPrefijo("ComparadorConex1");
            loIO.leerPropiedades(moConex1);
            moConex1.leerConfig();
            
            JPanelConexionesEDICION loConex = new JPanelConexionesEDICION();
            loConex.setDatos(moConex1, null);
            
            JMostrarPantallaParam loParam = new JMostrarPantallaParam((IFormEdicion)loConex, JMostrarPantalla.mclEdicionFrame);
            loParam.setCallBack(new CallBack() {
                @Override
                public void callBack(Object poControlador) {
                    try {
                        lblConexion1.setText(moConex1.getConexion().getURL());
                        if(moConex1.getConexion().getTipoConexion()!=JServerServidorDatos.mclTipoBD){
                            moConex1.getConexion().setUSUARIO(JOptionPane.showInputDialog("Usuario", moConex1.getConexion().getUSUARIO()));
                            moConex1.getConexion().setPASSWORD(JOptionPane.showInputDialog("Password", moConex1.getConexion().getPASSWORD()));
                        }
                        loIO.guardarPropiedades(moConex1);
                        JDatosGeneralesP.getDatosGenerales().getDatosGeneralesXML().guardarFichero();
                    } catch (Exception ex) {
                        JDepuracion.anadirTexto(getClass().getName(), ex);
                        utilesGUIx.msgbox.JMsgBox.mensajeError(JPanelDiferenciasBD.this, ex);
                    }
                }
            });
                        
            JDatosGeneralesP.getDatosGenerales().mostrarForm(loParam);
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }
        
    }//GEN-LAST:event_btnConexion1ActionPerformed

    private void btnIgualarTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarTablasActionPerformed
        try {
            int[] lal=jTableTablas.getSelectedRows();
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < lal.length; i++){
                try{
                    ((IDiferencia)moTablaModelTablas.moLista.get(lal[i])).arreglarDiferencia();
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(lal.length==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }        
    }//GEN-LAST:event_btnIgualarTablasActionPerformed

    private void btnIgualarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarCamposActionPerformed
        try {
            int[] lal=jTableCampos.getSelectedRows();
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < lal.length; i++){
                try{
                    ((IDiferencia)moTablaModelCampos.moLista.get(lal[i])).arreglarDiferencia();
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(lal.length==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }        

    }//GEN-LAST:event_btnIgualarCamposActionPerformed

    private void btnIgualarIndicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarIndicesActionPerformed
        try {
            int[] lal=jTableIndices.getSelectedRows();
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < lal.length; i++){
                try{
                    ((IDiferencia)moTablaModelIndices.moLista.get(lal[i])).arreglarDiferencia();
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(lal.length==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }  
    }//GEN-LAST:event_btnIgualarIndicesActionPerformed

    private void btnIgualarRelacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarRelacionesActionPerformed
        try {
            int[] lal=jTableRelaciones.getSelectedRows();
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < lal.length; i++){
                try{
                    ((IDiferencia)moTablaModelRelaciones.moLista.get(lal[i])).arreglarDiferencia();
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(lal.length==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Debes seleccionar una fila");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }  
    }//GEN-LAST:event_btnIgualarRelacionesActionPerformed

    private void btnIgualarTablasTODOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarTablasTODOActionPerformed
        try {
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < jTableTablas.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelTablas.moLista.get(i));
                    if(loDif.getTipoModificacion() != JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(jTableTablas.getRowCount()==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "No hay nada que igualar");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }   

    }//GEN-LAST:event_btnIgualarTablasTODOActionPerformed

    private void btnIgualarIndicesTODOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarIndicesTODOActionPerformed
        try {
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < jTableIndices.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelIndices.moLista.get(i));
                    if(loDif.getTipoModificacion() == JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            for(int i = 0 ; i < jTableIndices.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelIndices.moLista.get(i));
                    if(loDif.getTipoModificacion() != JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            
            if(jTableIndices.getRowCount()==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "No hay nada que igualar");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }   
    }//GEN-LAST:event_btnIgualarIndicesTODOActionPerformed

    private void btnIgualarRelacionesTODOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarRelacionesTODOActionPerformed
        try {
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < jTableRelaciones.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelRelaciones.moLista.get(i));
                    if(loDif.getTipoModificacion() == JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            for(int i = 0 ; i < jTableRelaciones.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelRelaciones.moLista.get(i));
                    if(loDif.getTipoModificacion() != JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            
            if(jTableRelaciones.getRowCount()==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "No hay nada que igualar");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }   
    }//GEN-LAST:event_btnIgualarRelacionesTODOActionPerformed

    private void btnIgualarCamposTODOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualarCamposTODOSActionPerformed
        try {
            StringBuilder lsError = new StringBuilder();
            for(int i = 0 ; i < jTableCampos.getRowCount(); i++){
                try{
                    IDiferencia loDif = ((IDiferencia)moTablaModelCampos.moLista.get(i));
                    if(loDif.getTipoModificacion() != JDiferencia.mclTipoSobra){
                        loDif.arreglarDiferencia();
                    }                    
                } catch (Exception ex) {
                    JDepuracion.anadirTexto(getClass().getName(), ex);
                    lsError.append(ex.toString());
                    lsError.append("\n");
                }                    
            }
            if(jTableCampos.getRowCount()==0){
                utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "No hay nada que igualar");
            }else{
                if(lsError.length()>0){
                    utilesGUIx.msgbox.JMsgBox.mensajeError(this, lsError.toString());
                }else{
                    utilesGUIx.msgbox.JMsgBox.mensajeInformacion(this, "Realizado");
                }
            }
        } catch (Exception ex) {
            JDepuracion.anadirTexto(getClass().getName(), ex);
            utilesGUIx.msgbox.JMsgBox.mensajeError(this, ex);
        }   
    }//GEN-LAST:event_btnIgualarCamposTODOSActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConexion1;
    private javax.swing.JButton btnConexion2;
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnEjecutar1;
    private javax.swing.JButton btnIgualarCampos;
    private javax.swing.JButton btnIgualarCamposTODOS;
    private javax.swing.JButton btnIgualarIndices;
    private javax.swing.JButton btnIgualarIndicesTODO;
    private javax.swing.JButton btnIgualarRelaciones;
    private javax.swing.JButton btnIgualarRelacionesTODO;
    private javax.swing.JButton btnIgualarTablas;
    private javax.swing.JButton btnIgualarTablasTODO;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelCampos;
    private javax.swing.JPanel jPanelIndices;
    private javax.swing.JPanel jPanelRelaciones;
    private javax.swing.JPanel jPanelTablas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private utilesGUIx.JTableCZ jTableCampos;
    private utilesGUIx.JTableCZ jTableIndices;
    private utilesGUIx.JTableCZ jTableRelaciones;
    private utilesGUIx.JTableCZ jTableTablas;
    private javax.swing.JLabel lblConexion1;
    private javax.swing.JLabel lblConexion2;
    // End of variables declaration//GEN-END:variables
    
}


/**Para tablas simples y sin edición*/
class JTableModelDiferencias  extends AbstractTableModel implements TableModelListener, ITabla {
  public IListaElementos moLista;
  public int mlTipoEstruc;
  
  public JTableModelDiferencias(int plTipoEstruc, IListaElementos poLista){
    mlTipoEstruc = plTipoEstruc;
    moLista = new JListaElementos();
    for(int i = 0 ; i < poLista.size(); i++){
        IDiferencia loDif = (IDiferencia)poLista.get(i);
        if(loDif.getTipoEstructura() == mlTipoEstruc){
            moLista.add(loDif);
        }
    }
  }

  public int getColumnCount() {
      return 3;
  }

  public int getRowCount() {
      return moLista.size();
  }

  public String getColumnName(int col) {
      switch(col){
          case 0:
            return "Estructura";
          case 1:
            return "Tipo";   
          default:
            return "Descripción";
      }
  }

  public Object getValueAt(int row, int col) {
    Object loValor = null;  
    try{
        IDiferencia loDif = (IDiferencia)moLista.get(row);
        if(col == 0){
            loValor = loDif.getEstructura();
        }else{
            if(col == 1){
                switch(loDif.getTipoModificacion()){
                    case IDiferencia.mclTipoModificacion:
                        loValor = "Modificación";
                        break;
                    case IDiferencia.mclTipoNoExiste:
                        loValor = "No existe";
                        break;
                    case IDiferencia.mclTipoSobra:
                        loValor = "Sobra";
                        break;
                }
            }else{
                loValor = loDif.getDiferencia();
            }
        }
    }catch(Exception e){
        e.printStackTrace();
        loValor = null;
    }
    return loValor;
  }

  public Class getColumnClass(int c) {
    return String.class;
  }
  public void tableChanged(TableModelEvent e) {
    fireTableChanged(e);
  }
  public void sortByColumn(int plColumn, boolean pbAscendente){
  }
   public boolean isCellEditable(int row, int col) {
      return false;
  }
    public void setValueAt(Object value, int row, int col) {
  }
    public java.awt.Component getComponent(int row, int col) {
        return null;
    }
    
}
